{"version":3,"sources":["components/common/requests.js","components/common/modal-info.jsx","components/common/app-bar-awr.jsx","components/common/abstract-filtered-data.jsx","components/home-page/table/table-db-home.jsx","components/home-page/home.jsx","components/edit-list-db-page/table/toolbar.jsx","components/edit-list-db-page/modal-page/modal-row.jsx","components/edit-list-db-page/table/table-db-edit.jsx","components/edit-list-db-page/edit-list-db.jsx","components/login-page/login.jsx","components/history-page/history.jsx","components/admin-page/admin.jsx","App.js","index.js"],"names":["requestContent","path","type","filter","isAuthCallBack","forbidenCallBack","key","request","integerList","data","requestInsertOrUpdateCredential","credential","body","fetch","method","headers","Headers","content-type","JSON","stringify","id","uuidv1","toString","time","Date","UTC","Object","objectSpread","then","response","status","json","undefined","RouteLink","props","react_default","a","createElement","Link","ModalInfo","state","Dialog_default","disableRestoreFocus","open","this","onClose","hadleClickClose","aria-labelledby","Paper_default","style","padding","DialogTitle_default","title","DialogContentText_default","Typography_default","variant","color","margin","content","DialogActions_default","marginTop","Button_default","onClick","marginLeft","component","to","route","routeButtonName","Component","AppBarAwr","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLogout","callBack","resp","sessionStorage","setItem","setState","isLogged","handleCloseModal","isSuggestModalOpen","handleSuggestLogin","isntAdmin","getItem","ex","classes","_this$state","AppBar_default","position","minWidth","Toolbar_default","className","navButton","Fragment","Tooltip_default","placement","disabled","loginButton","modal_info","withStyles","whiteSpace","AbstractFilterDataForTable","numRows","handleCloseSnackbar","isOpenSnackbar","handleChangePage","event","numRequirePage","isLoad","_this$innerMeta","innerMeta","endPointRequest","typeRequest","page","pageNumber","countRowsPerPage","numAllRows","properties","allRows","handleDeleteFilter","isntFilterEmpty","isntFilterDraftEmpty","_this$innerMeta2","filterDraft","isNotFound","handleChangeFilter","name","target","value","refreshPage","_this$innerMeta3","length","handleApplyFilter","_this$innerMeta4","forbidden","isOpenModal","initMethod","rowsPerPage","TableHomeDB","selectedRow","os","version","handleClickRow","row","handleGetPeriods","isSelectedRow","templateEmptyFilterDraft","_this2","emptyRows","spacer","actions","CircularProgress_default","disableShrink","spiner","size","thickness","disableFocusListener","IconButton_default","toolBarElement","aria-label","Remove_default","FilterList_default","Table_default","table","TableHead_default","TableRow_default","tableRow","TableCell_default","tableCellName","align","TextField_default","label","onChange","tableCellOther","TableBody_default","map","hover","selected","height","colSpan","Fade_default","in","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","propTypes","PropTypes","object","isRequired","tableCellButton","width","animationDuration","Home","dbId","snackbarStatus","minIntervalDuration","beginIntervalTime","endIntervalTime","selectedDateFrom","selectedDateTo","isNotStatePicker","success","i","handleGetReport","dateFrom","toISOString","dateTo","tennantId","awrContent","window","focus","document","write","execCommand","stop","handleDateChangeFrom","date","_this$state2","handleDateChangeTo","_this$state3","_this$state4","app_bar_awr","root","paperRoot","table_db_home","divider","material_ui_pickers_esm","utils","DateFnsUtils","paperPickers","LinearProgress_default","parseInt","Grid_default","container","spacing","gridForTypography","item","xs","maxDate","minDate","picker","typography","gridButtons","buttons","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","snackbar","Close_default","theme","unit","display","justifyContent","alignItems","withTheme","TableToolBar","_this$props","numSelected","classNames","defineProperty","highlight","handleDeleteRows","Delete_default","hadleClickModalRowOpen","Add_default","paddingRight","palette","secondary","main","backgroundColor","lighten","light","flex","text","ModalRow","hadleClickModalRowClose","autocomplete","onSubmit","hadleClickModalSubmit","inline","isEditModalType","statusModal","float","DialogContent_default","required","fullWidth","handleChangeRowModal","values","host","port","sid","login","pass","flexDirection","TableEditDB","rowDataModal","deleteStatus","isntRedirect","credentialId","val","test","notEditingRow","rowData","handleCheckBoxRow","idRow","newSelected","toConsumableArray","indexElement","indexOf","push","splice","handleCheckBoxAllRow","checked","elem","hadleClickModalInfoClose","isSelected","isAllSelected","paperTable","toolbar","Checkbox_default","tableCellPortSid","Edit_default","modal_row","Redirect","overflowX","wordWrap","EditListDB","table_db_edit","Login","isPermissionDenied","loginForm","user","handleChangeField","handleSubmitLogin","_this$state$loginForm","loginRequest","console","log","get","paper","textField","autoComplete","Clear_default","icon","Done_default","marginRight","HistoryAwrGetting","selectedIndex","handleListItemClick","index","paperList","List_default","subheader","ListSubheader_default","list","ListItem_default","button","ListItemIcon_default","ListItemText_default","inset","primary","background","bcrypt","require","salt","genSaltSync","Admin","inserOrUpdateCallback","messageSnackbar","handleOperateRow","hadleClickSubmit","hashSync","handleChangeRow","role","tableCellEnabled","tableCellButtons","username","enabled","ToggleOn_default","ToggleOff_default","paperAdd","select","MenuItem_default","createMuiTheme","dark","contrastText","App","core_styles","Route","exact","EditListDb","ReactDOM","render","BrowserRouter","basename","src_App","getElementById"],"mappings":"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","file":"static/js/main.9bb249f0.chunk.js","sourcesContent":["import uuidv1 from \"uuid/v1\";\r\n\r\nexport function requestContent(path, type, filter, isAuthCallBack, forbidenCallBack) {\r\n  for (const key in filter) filter[key] += \"\";\r\n\r\n  const body = {\r\n    integerList: null,\r\n    data: { filter: filter }\r\n  };\r\n  request(path, type, body, isAuthCallBack, forbidenCallBack);\r\n};\r\n\r\nexport function requestDeleteContent(path, credentialId, isAuthCallBack, forbidenCallBack) {\r\n  credentialId = credentialId.map(val => parseInt(val, 10));\r\n\r\n  const body = {\r\n    integerList: credentialId,\r\n    data: null\r\n  };\r\n  request(path, \"delete\", body, isAuthCallBack, forbidenCallBack);\r\n};\r\n\r\nexport function requestInsertOrUpdateCredential(path, type, credential, isAuthCallBack, forbidenCallBack) {\r\n  for (const key in credential) credential[key] += \"\";\r\n\r\n  const body = {\r\n    integerList: null,\r\n    data: { credential: credential }\r\n  };\r\n  request(path, type, body, isAuthCallBack, forbidenCallBack);\r\n};\r\n\r\nexport function requestPeriods(credentialId, callBack) {\r\n\r\n  const body = {\r\n    integerList: [credentialId],\r\n    data: null\r\n  };\r\n  request(\"home\", \"periods\", body, callBack);\r\n};\r\n\r\nexport function loginRequest(user, pass, callBack) {\r\n\r\n  fetch(\"/getawr/rest/edit/in?arg1=\" + user + \"&arg2=\" + pass, {\r\n    method: \"post\",   \r\n  }).then(callBack);\r\n};\r\n\r\nexport function logoutRequest(callBack) {\r\n\r\n  fetch(\"/getawr/rest/edit/out\", {\r\n    method: \"post\",   \r\n  }).then(callBack);\r\n};\r\n\r\nfunction request(path, type, body, isAuthCallBack, forbidenCallBack) {\r\n  fetch(\"/getawr/rest/\" + path, {\r\n    method: \"post\",\r\n    headers: new Headers({ \"content-type\": \"application/json;charset=UTF-8\" }),\r\n    body: JSON.stringify({\r\n      id: uuidv1().toString(),\r\n      time: Date.UTC(),\r\n      type: type,\r\n      body: { ...body }\r\n    })\r\n  }).then(function(response) {\r\n    if (response.status !== 403) \r\n      response.json().then(isAuthCallBack); \r\n    else if (!(forbidenCallBack === undefined || forbidenCallBack === null))\r\n      forbidenCallBack(response);    \r\n  });\r\n};\r\n\r\n// function requestPublic(path, type, body, callBack) {\r\n//   fetch(\"/getawr/rest/\" + path, {\r\n//     method: \"post\",\r\n//     headers: new Headers({ \"content-type\": \"application/json;charset=UTF-8\" }),\r\n//     body: JSON.stringify({\r\n//       id: uuidv1().toString(),\r\n//       time: Date.UTC(),\r\n//       type: type,\r\n//       body: { ...body }\r\n//     })\r\n//   }).then(function(response) {\r\n//     response.json().then(callBack);\r\n//   });\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link as RouteLinkHiddenName } from \"react-router-dom\";\r\n\r\nconst RouteLink = props => <RouteLinkHiddenName {...props} />;\r\n\r\nclass ModalInfo extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        disableRestoreFocus\r\n        open={this.props.open}\r\n        onClose={this.props.hadleClickClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <Paper style={{ padding: 20 }}>\r\n          <DialogTitle>{this.props.title}</DialogTitle>\r\n          <hr />\r\n          <DialogContentText>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={{ margin: 20 }}>\r\n              {this.props.content}\r\n            </Typography>\r\n          </DialogContentText>\r\n          <hr />\r\n          <DialogActions style={{ marginTop: 20 }}>\r\n            <Button onClick={this.props.hadleClickClose} color=\"inherit\">\r\n              Close\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: 10 }}\r\n              component={RouteLink}\r\n              to={this.props.route}\r\n              color=\"inherit\"\r\n            >\r\n              {this.props.routeButtonName}\r\n            </Button>\r\n          </DialogActions>\r\n        </Paper>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalInfo;\r\n","import React, { Component } from \"react\";\r\nimport { Link as RouteLinkHiddenName } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { logoutRequest } from \"./requests\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ModalInfo from \"../common/modal-info\";\r\n\r\nconst RouteLink = props => <RouteLinkHiddenName {...props} />;\r\n\r\nconst styles = {\r\n  loginButton: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  navButton: {\r\n    whiteSpace: \"nowrap\",\r\n    marginLeft: \"10px\"\r\n  }\r\n};\r\n\r\nclass AppBarAwr extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      isLogged: false,\r\n      isSuggestModalOpen: false,\r\n      isntAdmin: true\r\n    };\r\n    try {\r\n      if (sessionStorage.getItem(\"isAuth\") === \"1\") {\r\n        this.state.isLogged = true;\r\n        if (sessionStorage.getItem(\"role\") === \"ADMIN\")\r\n          this.state.isntAdmin = false;\r\n      } else this.state.isLogged = false;\r\n    } catch (ex) {\r\n      sessionStorage.setItem(\"isAuth\", \"0\");\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    logoutRequest(resp => {\r\n      sessionStorage.setItem(\"isAuth\", \"0\");\r\n      sessionStorage.setItem(\"role\", \"\");\r\n      this.setState({ isLogged: false });\r\n    });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ isSuggestModalOpen: false });\r\n  };\r\n\r\n  handleSuggestLogin = () => {\r\n    this.setState({ isSuggestModalOpen: true });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { isLogged, isSuggestModalOpen, isntAdmin } = this.state;\r\n\r\n    return (\r\n      <AppBar position=\"static\" style={{ minWidth: 950 }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Get Oracle AWR\r\n          </Typography>\r\n          <Button\r\n            className={classes.navButton}\r\n            component={RouteLink}\r\n            to=\"/\"\r\n            color=\"inherit\"\r\n          >\r\n            home\r\n          </Button>\r\n          <Button\r\n            className={classes.navButton}\r\n            component={RouteLink}\r\n            to=\"/history\"\r\n            color=\"inherit\"\r\n          >\r\n            History\r\n          </Button>\r\n\r\n          {isLogged ? (\r\n            <React.Fragment>\r\n              <Button\r\n                className={classes.navButton}\r\n                component={RouteLink}\r\n                to=\"/edit-list-db\"\r\n                color=\"inherit\"\r\n              >\r\n                Edit list DB\r\n              </Button>\r\n              <Tooltip\r\n                placement={\"top\"}\r\n                title={\r\n                  isntAdmin\r\n                    ? \"If you want to edit list of users, please login with ADMIN role\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <Button\r\n                  disabled={isntAdmin}\r\n                  className={classes.navButton}\r\n                  component={RouteLink}\r\n                  to=\"/admin\"\r\n                  color=\"inherit\"\r\n                >\r\n                  Edit list users\r\n                </Button>\r\n              </Tooltip>\r\n              <Button\r\n                className={classes.loginButton}\r\n                onClick={this.handleLogout}\r\n                color=\"inherit\"\r\n              >\r\n                Logout ({sessionStorage.getItem(\"role\")})\r\n              </Button>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Button\r\n                className={classes.navButton}\r\n                onClick={this.handleSuggestLogin}\r\n                color=\"inherit\"\r\n              >\r\n                Edit list DB\r\n              </Button>\r\n              <Button\r\n                className={classes.loginButton}\r\n                component={RouteLink}\r\n                to=\"/login\"\r\n                color=\"inherit\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </Toolbar>\r\n        <ModalInfo\r\n          open={isSuggestModalOpen}\r\n          hadleClickClose={this.handleCloseModal}\r\n          title=\"You are not logged in\"\r\n          content=\"Only authorized users can access this page. Please log in if you need to edit your Oracle database connection information\"\r\n          route=\"/login\"\r\n          routeButtonName=\"Login\"\r\n        />\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nAppBarAwr.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AppBarAwr);\r\n","import { Component } from \"react\";\r\nimport { requestContent } from \"./requests\";\r\n\r\nclass AbstractFilterDataForTable extends Component {\r\n  /*\r\n  Небходимые свойства объекта state\r\n  \r\n  state = {\r\n    filterDraft: { name: \"\", host: \"\", port: \"\" },\r\n    page: 0,\r\n    numAllRows: 0,\r\n    data: [],\r\n    isLoad: true,\r\n    isNotFound: false\r\n  };\r\n  */\r\n\r\n  constructor(numRows) {\r\n    super();\r\n    this.innerMeta = {};\r\n    this.innerMeta.numRows = numRows;\r\n    this.innerMeta.filter = {};\r\n    this.innerMeta.endPointRequest = \"unknown\";\r\n    this.innerMeta.typeRequest = \"unknown\";\r\n    this.forbidenCallBack = () => {\r\n      sessionStorage.setItem(\"isAuth\", \"0\");\r\n      sessionStorage.setItem(\"role\", \"\");\r\n      this.setState({ forbidden: true, isOpenModal: false, isLoad: false });\r\n    };\r\n    this.innerMeta.initMethod = () => {\r\n      requestContent(\r\n        this.innerMeta.endPointRequest,\r\n        this.innerMeta.typeRequest,\r\n        { pageNumber: 0, countRowsPerPage: numRows },\r\n        resp => {\r\n          this.setState({\r\n            data: resp.body.data,\r\n            numAllRows: resp.body.properties.allRows,\r\n            isLoad: false\r\n          });\r\n        }, this.forbidenCallBack\r\n      );\r\n    };\r\n  }\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ isOpenSnackbar: false });    \r\n  };\r\n\r\n  handleChangePage = (event, numRequirePage) => {\r\n    if (this.state.isLoad) return;\r\n    const { endPointRequest, typeRequest, numRows, filter } = this.innerMeta;\r\n    this.setState({ data: [], page: numRequirePage, isLoad: true });\r\n    requestContent(\r\n      endPointRequest,\r\n      typeRequest,\r\n      { pageNumber: numRequirePage, countRowsPerPage: numRows, ...filter },\r\n      resp => {\r\n        this.setState({\r\n          data: resp.body.data,\r\n          numAllRows: resp.body.properties.allRows,\r\n          isLoad: false\r\n        });\r\n      }, this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  handleDeleteFilter = () => {\r\n    let isntFilterEmpty = false;\r\n    let isntFilterDraftEmpty = false;\r\n    const { endPointRequest, typeRequest, numRows } = this.innerMeta;\r\n    for (const key in this.state.filterDraft)\r\n      if (this.state.filterDraft[key] !== \"\") {\r\n        isntFilterDraftEmpty = true;\r\n        break;\r\n      }\r\n\r\n    for (const key in this.innerMeta.filter)\r\n      if (this.innerMeta.filter[key] !== \"\") {\r\n        isntFilterEmpty = true;\r\n        break;\r\n      }\r\n\r\n    if (isntFilterDraftEmpty) {\r\n      const { filterDraft } = this.state;\r\n      for (const key in filterDraft) filterDraft[key] = \"\";\r\n      this.setState({ filterDraft: filterDraft });\r\n    }\r\n\r\n    if (isntFilterEmpty) {\r\n      this.innerMeta.filter = {};\r\n      this.setState({ data: [], page: 0, isLoad: true });\r\n      requestContent(\r\n        endPointRequest,\r\n        typeRequest,\r\n        { pageNumber: 0, countRowsPerPage: numRows },\r\n        resp => {\r\n          this.setState({\r\n            data: resp.body.data,\r\n            numAllRows: resp.body.properties.allRows,\r\n            isLoad: false,\r\n            isNotFound: false\r\n          });\r\n        }, this.forbidenCallBack\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChangeFilter = name => event => {\r\n    const { filterDraft } = this.state;\r\n    filterDraft[name] = event.target.value;\r\n    this.setState({ filterDraft: filterDraft });\r\n  };\r\n\r\n  refreshPage = (page) => {\r\n    const { endPointRequest, typeRequest, numRows, filter } = this.innerMeta;\r\n    requestContent(\r\n      endPointRequest,\r\n      typeRequest,\r\n      { pageNumber: page, countRowsPerPage: numRows, ...filter },\r\n      resp => {\r\n        this.setState({\r\n          data: resp.body.data,\r\n          numAllRows: resp.body.properties.allRows,\r\n          isLoad: false,\r\n          isNotFound: resp.body.data.length === 0\r\n        });\r\n      }, this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  handleApplyFilter = () => {\r\n    let isntFilterEmpty = false;\r\n    for (const key in this.state.filterDraft)\r\n      if (this.state.filterDraft[key] !== \"\") {\r\n        isntFilterEmpty = true;\r\n        break;\r\n      }\r\n\r\n    if (isntFilterEmpty) {\r\n      this.innerMeta.filter = {};\r\n      for (const key in this.state.filterDraft)\r\n        if (this.state.filterDraft[key] !== \"\")\r\n          this.innerMeta.filter[key] = this.state.filterDraft[key];\r\n      const { endPointRequest, typeRequest, numRows, filter } = this.innerMeta;\r\n      this.setState({ data: [], page: 0, isLoad: true });\r\n      requestContent(\r\n        endPointRequest,\r\n        typeRequest,\r\n        { pageNumber: 0, countRowsPerPage: numRows, ...filter },\r\n        resp => {\r\n          this.setState({\r\n            data: resp.body.data,\r\n            numAllRows: resp.body.properties.allRows,\r\n            isLoad: false,\r\n            isNotFound: resp.body.data.length === 0\r\n          });\r\n        }, this.forbidenCallBack\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default AbstractFilterDataForTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AbstractFilterDataForTable from \"../../common/abstract-filtered-data\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { requestPeriods } from \"../../common/requests\";\r\n\r\nconst rowsPerPage = 5;\r\n\r\nconst styles = {\r\n  table: {\r\n    minWidth: 600\r\n  },\r\n  tableCellButton: {\r\n    width: 98,\r\n    minWidth: 98\r\n  },\r\n  actions: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  toolBarElement: {\r\n    marginLeft: 10\r\n  },\r\n  tableCellName: {\r\n    minWidth: \"45%\",\r\n    width: \"45%\"\r\n  },\r\n  tableCellOther: {\r\n    minWidth: \"34%\",\r\n    width: \"34%\"\r\n  },\r\n  spiner: {\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  }\r\n};\r\n\r\nclass TableHomeDB extends AbstractFilterDataForTable {\r\n  state = {\r\n    selectedRow: {},\r\n    filterDraft: { name: \"\", os: \"\", version: \"\" },\r\n    page: 0,\r\n    numAllRows: 0,\r\n    data: [],\r\n    isLoad: true,\r\n    isNotFound: false\r\n  };\r\n\r\n  constructor() {\r\n    super(rowsPerPage);\r\n    this.innerMeta.endPointRequest = \"home\";\r\n    this.innerMeta.typeRequest = \"content\";\r\n    this.innerMeta.initMethod();\r\n    this.innerMeta.initMethod = null;\r\n    this.innerMeta.templateEmptyFilterDraft = { name: \"\", os: \"\", version: \"\" };\r\n  }\r\n\r\n  handleClickRow = row => () => {\r\n    if (this.state.isLoad) return;\r\n    this.setState({ selectedRow: row });\r\n    this.props.handleGetPeriods(true);\r\n    requestPeriods(row.id, resp => {\r\n      this.props.handleGetPeriods(false, resp, row);\r\n    });\r\n  };\r\n\r\n  isSelectedRow = id => id === this.state.selectedRow.id;\r\n\r\n  render() {\r\n    const {\r\n      page,\r\n      numAllRows,\r\n      data,\r\n      isLoad,\r\n      filterDraft,\r\n      isNotFound\r\n    } = this.state;\r\n    const emptyRows = rowsPerPage - data.length;\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Paper>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Please select database\r\n          </Typography>\r\n          <div className={classes.spacer} />\r\n          <div className={classes.actions}>\r\n            {isLoad ? (\r\n              <CircularProgress\r\n                variant=\"indeterminate\"\r\n                disableShrink\r\n                className={classes.spiner}\r\n                size={24}\r\n                thickness={4}\r\n              />\r\n            ) : (\r\n              <React.Fragment>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  placement={\"top\"}\r\n                  title=\"Clear filter\"\r\n                >\r\n                  <IconButton\r\n                    className={classes.toolBarElement}\r\n                    onClick={this.handleDeleteFilter}\r\n                    aria-label=\"Clear filter\"\r\n                  >\r\n                    <Remove />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  placement={\"top\"}\r\n                  title=\"Aply filter\"\r\n                >\r\n                  <IconButton\r\n                    className={classes.toolBarElement}\r\n                    onClick={this.handleApplyFilter}\r\n                    aria-label=\"Aply filter\"\r\n                  >\r\n                    <FilterListIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell className={classes.tableCellName} align=\"left\">\r\n                <TextField\r\n                  id=\"outlined-name\"\r\n                  label={\"Name\"}\r\n                  value={filterDraft[\"name\"]}\r\n                  onChange={this.handleChangeFilter(\"name\")}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n              <TableCell className={classes.tableCellOther} align=\"left\">\r\n                <TextField\r\n                  id=\"outlined-os\"\r\n                  label={\"OS\"}\r\n                  onChange={this.handleChangeFilter(\"os\")}\r\n                  value={filterDraft[\"os\"]}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n              <TableCell className={classes.tableCellOther} align=\"left\">\r\n                <TextField\r\n                  id=\"outlined-version\"\r\n                  label={\"Version\"}\r\n                  onChange={this.handleChangeFilter(\"version\")}\r\n                  value={filterDraft[\"version\"]}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(row => (\r\n              <TableRow\r\n                hover={!isLoad}\r\n                selected={this.isSelectedRow(row.id)}\r\n                onClick={this.handleClickRow(row)}\r\n                className={classes.tableRow}\r\n                key={row.id}\r\n              >\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.os}</TableCell>\r\n                <TableCell>{row.version}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={3}>\r\n                  <Fade in={emptyRows === rowsPerPage}>\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                      {isLoad\r\n                        ? \"Loading...\"\r\n                        : isNotFound\r\n                        ? \"Not found, please change filter\"\r\n                        : \"\"}\r\n                    </Typography>\r\n                  </Fade>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={numAllRows}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"Previous Page\"\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"Next Page\"\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nTableHomeDB.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TableHomeDB);\r\n","import React, { Component } from \"react\";\r\nimport AppBarAwr from \"../common/app-bar-awr\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker\r\n} from \"material-ui-pickers\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableHomeDB from \"./table/table-db-home\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { requestContent } from \"../common/requests\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 750,\r\n    minWidth: 750,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperPickers: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  gridButtons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  picker: {\r\n    marginTop: 20,\r\n    marginLeft: \"20%\"\r\n  },\r\n  gridForTypography: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    marginLeft: 10\r\n  },\r\n  buttons: {\r\n    marginTop: \"5%\"\r\n  },\r\n  snackbar: {\r\n    padding: theme.spacing.unit / 2\r\n  }\r\n});\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    isLoad: false,\r\n    dbId: null,\r\n    isOpenSnackbar: false,\r\n    snackbarStatus: \"\",\r\n    minIntervalDuration: null,\r\n    beginIntervalTime: new Date(),\r\n    endIntervalTime: new Date(),\r\n    selectedDateFrom: new Date(),\r\n    selectedDateTo: new Date(),\r\n    isNotStatePicker: true,\r\n    selectedRow: {}\r\n  };\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ isOpenSnackbar: false });\r\n  };\r\n\r\n  handleGetPeriods = (isLoad, resp, selectedRow) => {\r\n    if (isLoad) this.setState({ isLoad: true, isNotStatePicker: true });\r\n    else {\r\n      if (!resp.success) {\r\n        this.setState({\r\n          isLoad: false,\r\n          dbId: null,\r\n          isOpenSnackbar: true,\r\n          snackbarStatus: resp.body,\r\n          minIntervalDuration: null,\r\n          beginIntervalTime: null,\r\n          endIntervalTime: null,\r\n          selectedDateFrom: null,\r\n          selectedDateTo: null,\r\n          isNotStatePicker: true,\r\n          selectedRow: {}\r\n        });\r\n        return;\r\n      }\r\n      const { data } = resp.body;\r\n      let i = 0;\r\n      if (data.length > 1 && data[0].dbId === data[1].dbId) ++i;\r\n\r\n      this.setState({\r\n        isLoad: false,\r\n        dbId: data[0].dbId,\r\n        minIntervalDuration:\r\n          data[0].endIntervalTime - data[0].beginIntervalTime + 500000,\r\n        beginIntervalTime: new Date(data[0].beginIntervalTime - 600000),\r\n        endIntervalTime: new Date(data[i].endIntervalTime + 600000),\r\n        selectedDateFrom: new Date(data[i].beginIntervalTime),\r\n        selectedDateTo: new Date(data[i].endIntervalTime),\r\n        isNotStatePicker: false,\r\n        selectedRow: selectedRow\r\n      });\r\n    }\r\n  };\r\n\r\n  handleGetReport = () => {\r\n    this.setState({ isLoad: true, isNotStatePicker: true });\r\n    const { selectedDateFrom, selectedDateTo, selectedRow } = this.state;\r\n    const propsForGetAWR = {\r\n      dbId: this.state.dbId,\r\n      dateFrom: selectedDateFrom.toISOString(),\r\n      dateTo: selectedDateTo.toISOString(),\r\n      tennantId: selectedRow.id\r\n    };\r\n    \r\n    requestContent(\"home\", \"awr\", propsForGetAWR, resp => {\r\n      this.setState({ isLoad: false, isNotStatePicker: false });\r\n      \r\n      if (!resp.success)\r\n        this.setState({ isOpenSnackbar: true, snackbarStatus: resp.body });\r\n      else {\r\n        const awrContent = window.open(\"\", \"_blank\");\r\n        awrContent.focus();        \r\n        awrContent.document.write(resp.body);\r\n        awrContent.document.execCommand(\"Stop\", false);\r\n        awrContent.document.stop();\r\n        resp.body = null;\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDateChangeFrom = date => {\r\n    const {\r\n      beginIntervalTime,\r\n      minIntervalDuration,\r\n      selectedDateTo\r\n    } = this.state;\r\n    if (date - beginIntervalTime < 0)\r\n      this.setState({ selectedDateFrom: beginIntervalTime });\r\n    else if (selectedDateTo - date < minIntervalDuration)\r\n      this.setState({\r\n        selectedDateFrom: new Date(+selectedDateTo - minIntervalDuration)\r\n      });\r\n    else this.setState({ selectedDateFrom: date });\r\n  };\r\n\r\n  handleDateChangeTo = date => {\r\n    const {\r\n      endIntervalTime,\r\n      minIntervalDuration,\r\n      selectedDateFrom\r\n    } = this.state;\r\n    if (endIntervalTime - date < 0)\r\n      this.setState({ selectedDateTo: endIntervalTime });\r\n    else if (date - selectedDateFrom < minIntervalDuration)\r\n      this.setState({\r\n        selectedDateTo: new Date(+selectedDateFrom + minIntervalDuration)\r\n      });\r\n    else this.setState({ selectedDateTo: date });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      isLoad,\r\n      isNotStatePicker,\r\n      selectedDateFrom,\r\n      selectedDateTo,\r\n      beginIntervalTime,\r\n      endIntervalTime,\r\n      snackbarStatus,\r\n      isOpenSnackbar,\r\n      selectedRow\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBarAwr />\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paperRoot}>\r\n            <TableHomeDB handleGetPeriods={this.handleGetPeriods} />\r\n            <div className={classes.divider} />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Paper className={classes.paperPickers}>\r\n                <div style={{ height: 10 }}>\r\n                  <Fade in={isLoad}>\r\n                    <LinearProgress color=\"secondary\" />\r\n                  </Fade>\r\n                </div>\r\n                <div style={{ height: 10 }}>\r\n                  <Fade in={!isNotStatePicker}>\r\n                    <Typography variant=\"body1\" color=\"inherit\">\r\n                      For DB: {selectedRow.name}, awr interval about{\" \"}\r\n                      {parseInt(\r\n                        (this.state.minIntervalDuration - 500000) / 60000\r\n                      )}{\" \"}\r\n                      minuts\r\n                    </Typography>\r\n                  </Fade>\r\n                </div>\r\n                <Grid container spacing={0}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid className={classes.gridForTypography} item xs={2}>\r\n                      <Typography variant=\"body1\" color=\"inherit\">\r\n                        From period:\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <DatePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={selectedDateTo}\r\n                        minDate={beginIntervalTime}\r\n                        className={classes.picker}\r\n                        label=\"Date\"\r\n                        value={selectedDateFrom}\r\n                        onChange={this.handleDateChangeFrom}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TimePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={selectedDateTo}\r\n                        minDate={beginIntervalTime}\r\n                        className={classes.picker}\r\n                        label=\"Time\"\r\n                        value={selectedDateFrom}\r\n                        onChange={this.handleDateChangeFrom}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    <Grid className={classes.gridForTypography} item xs={2}>\r\n                      <Typography\r\n                        className={classes.typography}\r\n                        variant=\"body1\"\r\n                        color=\"inherit\"\r\n                      >\r\n                        To period:\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <DatePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={endIntervalTime}\r\n                        minDate={selectedDateFrom}\r\n                        className={classes.picker}\r\n                        label=\"Date\"\r\n                        value={selectedDateTo}\r\n                        onChange={this.handleDateChangeTo}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TimePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={endIntervalTime}\r\n                        minDate={selectedDateFrom}\r\n                        className={classes.picker}\r\n                        label=\"Time\"\r\n                        value={selectedDateTo}\r\n                        onChange={this.handleDateChangeTo}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item className={classes.gridButtons} xs={12}>\r\n                      <Button\r\n                        disabled={isNotStatePicker}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.handleGetReport}\r\n                        className={classes.buttons}\r\n                      >\r\n                        Get report\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </MuiPickersUtilsProvider>\r\n          </Paper>\r\n        </div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          }}\r\n          open={isOpenSnackbar}\r\n          autoHideDuration={8000}\r\n          onClose={this.handleCloseSnackbar}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{snackbarStatus}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.snackbar}\r\n              onClick={this.handleCloseSnackbar}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Home);\r\n","import React, { Component } from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n  },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    display: \"flex\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    padding: 15\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  },\r\n  toolBarElement: {\r\n    marginLeft: 10\r\n  },\r\n  spiner: {\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  }\r\n});\r\n\r\nclass TableToolBar extends Component {\r\n  render() {\r\n    const { numSelected, classes } = this.props;\r\n\r\n    return (\r\n      <Toolbar\r\n        className={classNames(classes.root, {\r\n          [classes.highlight]: numSelected > 0\r\n        })}\r\n      >\r\n        <div className={classes.title}>\r\n          {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"subtitle1\">\r\n              {numSelected} selected\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n              List of database instance records\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <div className={classes.spacer} />\r\n\r\n        <div className={classes.actions}>\r\n          {numSelected > 0 ? (\r\n            <Tooltip placement={\"top\"} title=\"Delete\">\r\n              <IconButton\r\n                onClick={this.props.handleDeleteRows}\r\n                aria-label=\"Delete\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <React.Fragment>\r\n              {this.props.isLoad ? (\r\n                <CircularProgress\r\n                  variant=\"indeterminate\"\r\n                  disableShrink\r\n                  className={classes.spiner}\r\n                  size={24}\r\n                  thickness={4}\r\n                />\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Tooltip\r\n                    disableFocusListener\r\n                    placement={\"top\"}\r\n                    title=\"Clear filter\"\r\n                  >\r\n                    <IconButton\r\n                      className={classes.toolBarElement}\r\n                      onClick={this.props.handleDeleteFilter}\r\n                      aria-label=\"Clear filter\"\r\n                    >\r\n                      <Remove />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    disableFocusListener\r\n                    placement={\"top\"}\r\n                    title=\"Aply filter\"\r\n                  >\r\n                    <IconButton\r\n                      className={classes.toolBarElement}\r\n                      onClick={this.props.handleApplyFilter}\r\n                      aria-label=\"Aply filter\"\r\n                    >\r\n                      <FilterListIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </React.Fragment>\r\n              )}\r\n              <Tooltip\r\n                disableFocusListener\r\n                placement={\"top\"}\r\n                title=\"Add record\"\r\n              >\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  className={classes.toolBarElement}\r\n                  onClick={this.props.hadleClickModalRowOpen(false)}\r\n                  aria-label=\"Add record\"\r\n                >\r\n                  <Add />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nTableToolBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TableToolBar);\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\n\r\nclass ModalRow extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          disableRestoreFocus\r\n          open={this.props.open}\r\n          onClose={this.props.hadleClickModalRowClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <form\r\n            autocomplete=\"off\"\r\n            action=\"#\"\r\n            onSubmit={this.props.hadleClickModalSubmit}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n              <Typography inline color=\"inherit\" variant=\"inherit\">\r\n                You can {this.props.isEditModalType ? \"edit\" : \"add\"} info about\r\n                Oracle DB connection\r\n              </Typography>\r\n              <Fade in={this.props.statusModal === \"performing request, please wait\"}>\r\n                <CircularProgress\r\n                  variant=\"indeterminate\"\r\n                  disableShrink\r\n                  style={{\r\n                    float: \"right\",\r\n                    color: \"#6798e5\",\r\n                    animationDuration: \"550ms\"\r\n                  }}\r\n                  size={24}\r\n                  thickness={4}\r\n                />\r\n              </Fade>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                required\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"DB name (name)\"\r\n                fullWidth\r\n                onChange={this.props.handleChangeRowModal(\"name\")}\r\n                value={this.props.values.name}\r\n              />\r\n              <TextField\r\n                required\r\n                margin=\"dense\"\r\n                id=\"host\"\r\n                label=\"Host\"\r\n                fullWidth\r\n                onChange={this.props.handleChangeRowModal(\"host\")}\r\n                value={this.props.values.host}\r\n              />\r\n              <TextField\r\n                required\r\n                margin=\"dense\"\r\n                id=\"port\"\r\n                label=\"Port\"\r\n                fullWidth\r\n                onChange={this.props.handleChangeRowModal(\"port\")}\r\n                value={this.props.values.port}\r\n              />\r\n              <TextField\r\n                required\r\n                margin=\"dense\"\r\n                id=\"sid\"\r\n                label=\"Sid\"\r\n                fullWidth\r\n                onChange={this.props.handleChangeRowModal(\"sid\")}\r\n                value={this.props.values.sid}\r\n              />\r\n              <TextField\r\n                required\r\n                margin=\"dense\"\r\n                id=\"login\"\r\n                label=\"Login\"\r\n                fullWidth\r\n                onChange={this.props.handleChangeRowModal(\"login\")}\r\n                value={this.props.values.login}\r\n              />\r\n              <Tooltip\r\n                placement={\"bottom-start\"}\r\n                title={\r\n                  this.props.isEditModalType\r\n                    ? \"If you want edit reenter all password, or just don't change\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <TextField\r\n                  required\r\n                  margin=\"dense\"\r\n                  id=\"pass\"\r\n                  label={\"Password\"}\r\n                  onChange={this.props.handleChangeRowModal(\"pass\")}\r\n                  value={this.props.values.pass}\r\n                  type=\"password\"\r\n                  fullWidth\r\n                />\r\n              </Tooltip>\r\n            </DialogContent>\r\n\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", padding: 20 }}>\r\n              <Typography\r\n                style={{ padding: 10 }}\r\n                color=\"inherit\"\r\n                variant=\"inherit\"\r\n              >\r\n                status: {this.props.statusModal}\r\n              </Typography>              \r\n            </div>\r\n            <DialogActions>\r\n              <Button\r\n                onClick={this.props.hadleClickModalRowClose}\r\n                color=\"primary\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                disabled={\r\n                  this.props.statusModal === \"performing request, please wait\"\r\n                }\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalRow;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TableToolBar from \"./toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ModalRow from \"../modal-page/modal-row\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AbstractFilterDataForTable from \"../../common/abstract-filtered-data\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  requestInsertOrUpdateCredential,\r\n  requestDeleteContent\r\n} from \"../../common/requests\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ModalInfo from \"../../common/modal-info\";\r\n\r\nconst rowsPerPage = 10;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 3,\r\n    width: \"70%\",\r\n    minWidth: 900\r\n  },\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperTable: {\r\n    overflowX: \"auto\"\r\n  },\r\n  tableCellName: {\r\n    wordWrap: \"break-word\",\r\n    width: \"20%\",\r\n    minWidth: \"20%\"\r\n  },\r\n  tableCellButton: {\r\n    width: \"10%\",\r\n    minWidth: \"10%\"\r\n  },\r\n  tableCellOther: {\r\n    wordWrap: \"break-word\",\r\n    minWidth: \"20%\",\r\n    width: \"20%\"\r\n  },\r\n  tableCellPortSid: {\r\n    wordWrap: \"break-word\",\r\n    minWidth: \"15%\",\r\n    width: \"15%\"\r\n  },\r\n  snackbar: {\r\n    padding: theme.spacing.unit / 2\r\n  }\r\n});\r\n\r\nclass TableEditDB extends AbstractFilterDataForTable {\r\n  state = {\r\n    forbidden: false,\r\n    filterDraft: { name: \"\", host: \"\", port: \"\", sid: \"\", login: \"\" },\r\n    page: 0,\r\n    numAllRows: 0,\r\n    data: [],\r\n    isLoad: true,\r\n    isNotFound: false,\r\n    isOpenModal: false,\r\n    selected: [],\r\n    rowDataModal: {\r\n      id: \"\",\r\n      name: \"\",\r\n      host: \"\",\r\n      port: \"\",\r\n      sid: \"\",\r\n      login: \"\",\r\n      pass: \"\"\r\n    },\r\n    statusModal: \"on open...\",\r\n    isEditModalType: false,\r\n    isOpenSnackbar: false,\r\n    deleteStatus: \"\",\r\n    isntRedirect: true\r\n  };\r\n\r\n  constructor(props) {\r\n    super(rowsPerPage);\r\n    this.props = { ...props };\r\n    this.innerMeta.endPointRequest = \"edit\";\r\n    this.innerMeta.typeRequest = \"content\";\r\n    this.innerMeta.initMethod();\r\n    this.innerMeta.initMethod = null;\r\n    this.innerMeta.notEditingRow = {};\r\n  }\r\n\r\n  handleDeleteRows = () => {\r\n    this.setState({ data: [], page: 0, isLoad: true, selected: [] });\r\n    requestDeleteContent(\r\n      \"edit\",\r\n      this.state.selected,\r\n      resp => {\r\n        this.setState({ isOpenSnackbar: true, deleteStatus: resp.body });\r\n        if (resp.success === true) this.refreshPage(0);\r\n      },\r\n      this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  handleChangeRowModal = name => event => {\r\n    const { rowDataModal } = this.state;\r\n    if (name === \"port\" && !/^\\d*$/.test(event.target.value))\r\n      rowDataModal[name] = \"\";\r\n    else rowDataModal[name] = event.target.value;\r\n    this.setState({ rowDataModal: rowDataModal });\r\n  };\r\n\r\n  hadleClickModalSubmit = event => {\r\n    const { rowDataModal } = this.state;\r\n\r\n    let type = \"insert\";\r\n    if (this.state.isEditModalType) {\r\n      let i = 0;\r\n      type = \"update\";\r\n      for (const key in rowDataModal)\r\n        if (rowDataModal[key] !== this.innerMeta.notEditingRow[key]) ++i;\r\n      if (i === 0) return;\r\n    }\r\n    this.setState({ statusModal: \"performing request, please wait\" });\r\n    requestInsertOrUpdateCredential(\r\n      this.innerMeta.endPointRequest,\r\n      type,\r\n      rowDataModal,\r\n      resp => {\r\n        if (this.state.statusModal === \"performing request, please wait\") {\r\n          this.setState({ statusModal: resp.body });\r\n          if (resp.body === \"row updated successfully\")\r\n            this.innerMeta.notEditingRow = { ...rowDataModal };\r\n        }\r\n      },\r\n      this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  hadleClickModalRowOpen = (isEditModalType, rowData) => () => {\r\n    if (isEditModalType) {\r\n      this.innerMeta.notEditingRow = { ...rowData };\r\n      this.innerMeta.notEditingRow.pass = \"================\";\r\n    } else\r\n      this.innerMeta.notEditingRow = {\r\n        name: \"\",\r\n        host: \"\",\r\n        port: \"\",\r\n        sid: \"\",\r\n        login: \"\",\r\n        pass: \"\"\r\n      };\r\n\r\n    this.setState({\r\n      isOpenModal: true,\r\n      isEditModalType: isEditModalType,\r\n      rowDataModal: { ...this.innerMeta.notEditingRow },\r\n      statusModal: \"on open...\"\r\n    });\r\n  };\r\n\r\n  hadleClickModalRowClose = () => {\r\n    this.setState({ isOpenModal: false, statusModal: \"on close...\" });\r\n    this.refreshPage(this.state.page);\r\n  };\r\n\r\n  handleCheckBoxRow = idRow => () => {\r\n    let newSelected = [...this.state.selected];\r\n    const indexElement = newSelected.indexOf(idRow);\r\n\r\n    if (indexElement === -1) newSelected.push(idRow);\r\n    else newSelected.splice(indexElement, 1);\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleCheckBoxAllRow = event => {\r\n    if (!event.target.checked) this.setState({ selected: [] });\r\n    else this.setState({ selected: this.state.data.map(elem => elem.id) });\r\n  };\r\n\r\n  hadleClickModalInfoClose = () => {\r\n    this.setState({ isntRedirect: false, forbidden: false });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n  isAllSelected = () =>\r\n    this.state.data.length !== 0 &&\r\n    this.state.selected.length === this.state.data.length;\r\n\r\n  render() {\r\n    const {\r\n      forbidden,\r\n      filterDraft,\r\n      page,\r\n      numAllRows,\r\n      data,\r\n      isLoad,\r\n      isNotFound,\r\n      isOpenModal,\r\n      selected,\r\n      rowDataModal,\r\n      statusModal,\r\n      isEditModalType,\r\n      isOpenSnackbar,\r\n      deleteStatus,\r\n      isntRedirect\r\n    } = this.state;\r\n    const emptyRows = rowsPerPage - data.length;\r\n\r\n    const { classes } = this.props;\r\n    if (isntRedirect)\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paperRoot}>\r\n            <Paper className={classes.paperTable}>\r\n              <TableToolBar\r\n                handleApplyFilter={this.handleApplyFilter}\r\n                handleDeleteFilter={this.handleDeleteFilter}\r\n                hadleClickModalRowOpen={this.hadleClickModalRowOpen}\r\n                handleDeleteRows={this.handleDeleteRows}\r\n                numSelected={selected.length}\r\n                isLoad={isLoad}\r\n              />\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow className={classes.tableRow}>\r\n                    <TableCell\r\n                      padding=\"none\"\r\n                      className={classes.tableCellButton}\r\n                    >\r\n                      <Checkbox\r\n                        onChange={this.handleCheckBoxAllRow}\r\n                        checked={this.isAllSelected()}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellName}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-name\"\r\n                        label={\"DB name\"}\r\n                        value={filterDraft[\"name\"]}\r\n                        onChange={this.handleChangeFilter(\"name\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellOther}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-host\"\r\n                        label={\"Host\"}\r\n                        value={filterDraft[\"host\"]}\r\n                        onChange={this.handleChangeFilter(\"host\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellPortSid}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-port\"\r\n                        label={\"Port\"}\r\n                        value={filterDraft[\"port\"]}\r\n                        onChange={this.handleChangeFilter(\"port\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellPortSid}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-sid\"\r\n                        label={\"Sid\"}\r\n                        value={filterDraft[\"sid\"]}\r\n                        onChange={this.handleChangeFilter(\"sid\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellOther}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-login\"\r\n                        label={\"Login\"}\r\n                        value={filterDraft[\"login\"]}\r\n                        onChange={this.handleChangeFilter(\"login\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.map(row => {\r\n                    return (\r\n                      <TableRow className={classes.tableRow} key={row.id}>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          <Checkbox\r\n                            onChange={this.handleCheckBoxRow(row.id)}\r\n                            checked={this.isSelected(row.id)}\r\n                          />\r\n                          <IconButton\r\n                            disabled={selected.length > 0 ? true : false}\r\n                            onClick={this.hadleClickModalRowOpen(true, row)}\r\n                            aria-label=\"Edit\"\r\n                          >\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          className={classes.tableCellName}\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellOther}\r\n                        >\r\n                          {row.host}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellPortSid}\r\n                        >\r\n                          {row.port}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellPortSid}\r\n                        >\r\n                          {row.sid}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellOther}\r\n                        >\r\n                          {row.login}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 49 * emptyRows }}>\r\n                      <TableCell colSpan={6}>\r\n                        <Fade in={emptyRows === rowsPerPage}>\r\n                          <Typography variant=\"h6\" id=\"tableTitle\">\r\n                            {isLoad\r\n                              ? \"Loading...\"\r\n                              : isNotFound\r\n                              ? \"Not found, please change filter\"\r\n                              : \"\"}\r\n                          </Typography>\r\n                        </Fade>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[rowsPerPage]}\r\n                component=\"div\"\r\n                count={numAllRows}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                backIconButtonProps={{\r\n                  \"aria-label\": \"Previous Page\"\r\n                }}\r\n                nextIconButtonProps={{\r\n                  \"aria-label\": \"Next Page\"\r\n                }}\r\n                onChangePage={this.handleChangePage}\r\n              />\r\n              <ModalRow\r\n                hadleClickModalRowClose={this.hadleClickModalRowClose}\r\n                hadleClickModalSubmit={this.hadleClickModalSubmit}\r\n                handleChangeRowModal={this.handleChangeRowModal}\r\n                isEditModalType={isEditModalType}\r\n                open={isOpenModal}\r\n                values={rowDataModal}\r\n                statusModal={statusModal}\r\n              />\r\n              <ModalInfo\r\n                open={forbidden}\r\n                hadleClickClose={this.hadleClickModalInfoClose}\r\n                title=\"Access forbidden...\"\r\n                content=\"You were logged out, or session timed out. If you need to continue editing on this page, please login again\"\r\n                route=\"/login\"\r\n                routeButtonName=\"Login\"\r\n              />\r\n            </Paper>\r\n          </Paper>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\"\r\n            }}\r\n            open={isOpenSnackbar}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleCloseSnackbar}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            message={<span id=\"message-id\">{deleteStatus}</span>}\r\n            action={[\r\n              <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.snackbar}\r\n                onClick={this.handleCloseSnackbar}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nTableEditDB.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TableEditDB);\r\n","import React, { Component } from 'react';\r\nimport AppBarAwr from '../common/app-bar-awr';\r\nimport TableEditDB from './table/table-db-edit';\r\n\r\nclass EditListDB extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( \r\n      <React.Fragment>\r\n        <AppBarAwr/>\r\n        <TableEditDB/>\r\n      </React.Fragment>\r\n     );\r\n  }\r\n}\r\n \r\nexport default EditListDB;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Done from \"@material-ui/icons/Done\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link as RouteLinkHiddenName } from \"react-router-dom\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { loginRequest } from \"../common/requests\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst RouteLink = props => <RouteLinkHiddenName {...props} />;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: \"10%\",\r\n    width: 450,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  container: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  textField: {\r\n    marginTop: \"5%\",\r\n    width: 300\r\n  },\r\n  buttons: {\r\n    marginTop: \"5%\",\r\n    marginRight: \"5%\",\r\n    width: 140\r\n  },\r\n  icon: {\r\n    marginRight: \"10px\"\r\n  },\r\n  paper: {\r\n    padding: \"10%\"\r\n  },\r\n  spiner: {\r\n    float: \"right\",\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isLoad: false,\r\n    isPermissionDenied: false,\r\n    isntRedirect: true,\r\n    loginForm: { user: \"\", pass: \"\" }\r\n  };\r\n\r\n  handleChangeField = name => event => {\r\n    const { loginForm } = this.state;\r\n    loginForm[name] = event.target.value;\r\n    this.setState({ isPermissionDenied: false, loginForm: { ...loginForm } });\r\n  };\r\n\r\n  handleSubmitLogin = () => {\r\n    this.setState({ isLoad: true });\r\n    const { user, pass } = this.state.loginForm;\r\n    loginRequest(user, pass, resp => {\r\n      \r\n\r\n      console.log(resp.headers.get(\"role\"));\r\n      \r\n\r\n\r\n      if (resp.status !== 200)\r\n        this.setState({ isLoad: false, isPermissionDenied: true });\r\n      else {\r\n        sessionStorage.setItem(\"isAuth\", \"1\");\r\n        sessionStorage.setItem(\"role\", resp.headers.get(\"role\"));\r\n        this.setState({\r\n          isLoad: false,\r\n          isPermissionDenied: false,\r\n          isntRedirect: false,\r\n          loginForm: { user: \"\", pass: \"\" }\r\n        }); \r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { isLoad, isPermissionDenied, isntRedirect, loginForm } = this.state;\r\n    if (isntRedirect)\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper className={classes.container}>\r\n            <Paper className={classes.paper}>\r\n              <Fade in={isLoad}>\r\n                <CircularProgress\r\n                  variant=\"indeterminate\"\r\n                  disableShrink\r\n                  className={classes.spiner}\r\n                  size={24}\r\n                  thickness={4}\r\n                />\r\n              </Fade>\r\n\r\n              <Typography\r\n                className={classes.textField}\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n              >\r\n                Please login\r\n              </Typography>\r\n              <div style={{ height: 15 }}>\r\n                <Fade in={isPermissionDenied}>\r\n                  <Typography variant=\"body1\" color=\"primary\">\r\n                    permision denied, please check entered data\r\n                  </Typography>\r\n                </Fade>\r\n              </div>\r\n              <TextField\r\n                id=\"standard-name\"\r\n                label=\"Login\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={loginForm[\"user\"]}\r\n                onChange={this.handleChangeField(\"user\")}\r\n              />\r\n              <TextField\r\n                id=\"standard-password-input\"\r\n                label=\"Password\"\r\n                className={classes.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={loginForm[\"pass\"]}\r\n                onChange={this.handleChangeField(\"pass\")}\r\n              />\r\n              <Button\r\n                component={RouteLink}\r\n                to=\"/\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttons}\r\n              >\r\n                <Clear className={classes.icon} />\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.buttons}\r\n                onClick={this.handleSubmitLogin}\r\n              >\r\n                <Done className={classes.icon} />\r\n                Login\r\n              </Button>\r\n            </Paper>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBarAwr from \"../common/app-bar-awr\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 650,\r\n    minWidth: 650,   \r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperList: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  list: {\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\n\r\nclass HistoryAwrGetting extends Component {\r\n  state = {\r\n    selectedIndex: -1\r\n  };\r\n\r\n  handleListItemClick = (event, index) => {\r\n    this.setState({ selectedIndex: index });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBarAwr />\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paperRoot}>\r\n            <Paper className={classes.paperList}>\r\n              <List\r\n                component=\"nav\"\r\n                subheader={\r\n                  <ListSubheader component=\"div\">\r\n                    History of receiving reports\r\n                  </ListSubheader>\r\n                }\r\n                className={classes.list}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={this.state.selectedIndex === 0}\r\n                  onClick={event => this.handleListItemClick(event, 0)}\r\n                >\r\n                  <ListItemIcon />\r\n                  <ListItemText inset primary=\"An example entry\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  selected={this.state.selectedIndex === 1}\r\n                  onClick={event => this.handleListItemClick(event, 1)}\r\n                >\r\n                  <ListItemIcon />\r\n                  <ListItemText inset primary=\"An example entry\" />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </Paper>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHistoryAwrGetting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HistoryAwrGetting);\r\n","import React from \"react\";\r\nimport AppBarAwr from \"../common/app-bar-awr\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ToggleOnIcon from \"@material-ui/icons/ToggleOn\";\r\nimport ToggleOffIcon from \"@material-ui/icons/ToggleOff\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { requestInsertOrUpdateCredential } from \"../common/requests\";\r\nimport AbstractFilterDataForTable from \"../common/abstract-filtered-data\";\r\nimport ModalInfo from \"../common/modal-info\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst rowsPerPage = 7;\r\n\r\nconst bcrypt = require(\"bcryptjs\");\r\nconst salt = bcrypt.genSaltSync(4);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 3,\r\n    width: 650,\r\n    minWidth: 650\r\n  },\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperTable: {\r\n    overflowX: \"auto\"\r\n  },\r\n  tableCellButtons: {\r\n    width: 80,\r\n    minWidth: 80\r\n  },\r\n  tableCellEnabled: {\r\n    width: 40,\r\n    minWidth: 40\r\n  },\r\n  spiner: {\r\n    marginLeft: \"auto\",\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  },\r\n  paperAdd: {\r\n    padding: 17,\r\n    marginTop: theme.spacing.unit * 2\r\n  },\r\n  snackbar: {\r\n    padding: theme.spacing.unit / 2\r\n  }\r\n});\r\n\r\nclass Admin extends AbstractFilterDataForTable {\r\n  constructor(props) {\r\n    super(rowsPerPage);\r\n    this.state = {\r\n      data: [],\r\n      numAllRows: 0,\r\n      page: 0,\r\n      isLoad: true,\r\n      forbidden: false,\r\n      row: { user: \"\", pass: \"\", role: \"\" },\r\n      isOpenSnackbar: false,\r\n      messageSnackbar: \"\",\r\n      isntRedirect: true\r\n    };\r\n\r\n    this.props = { ...props };\r\n    this.innerMeta.endPointRequest = \"edit/admin\";\r\n    this.innerMeta.typeRequest = \"content\";\r\n    this.innerMeta.initMethod();\r\n    this.innerMeta.initMethod = null;\r\n  }\r\n\r\n  inserOrUpdateCallback = resp => {\r\n    if (resp.success === true)\r\n      this.setState({\r\n        data: resp.body.data,\r\n        isLoad: false,\r\n        numAllRows: resp.body.properties.allRows,        \r\n      });\r\n    else\r\n      this.setState({\r\n        isLoad: false,\r\n        isOpenSnackbar: true,\r\n        messageSnackbar: resp.body\r\n      });\r\n  };\r\n\r\n  handleOperateRow = (id, action) => () => {\r\n    this.setState({ isLoad: true });\r\n    requestInsertOrUpdateCredential(\r\n      \"edit/admin\",\r\n      \"operate\",\r\n      {\r\n        id: id,\r\n        action: action,\r\n        pageNumber: 0,\r\n        countRowsPerPage: rowsPerPage\r\n      },\r\n      this.inserOrUpdateCallback,\r\n      this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  hadleClickSubmit = () => {\r\n    this.setState({ isLoad: true });\r\n\r\n    const row = { ...this.state.row };\r\n    row.pass = bcrypt.hashSync(row.pass, salt);\r\n\r\n    requestInsertOrUpdateCredential(\r\n      \"edit/admin\",\r\n      \"insert\",\r\n      {\r\n        ...row,\r\n        pageNumber: 0,\r\n        countRowsPerPage: rowsPerPage\r\n      },\r\n      this.inserOrUpdateCallback,\r\n      this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  handleChangeRow = name => event => {\r\n    const { row } = this.state;\r\n    row[name] = event.target.value;\r\n    this.setState({ row: row });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({\r\n      data: [],\r\n      numAllRows: 0,\r\n      page: 0,\r\n      isLoad: true,\r\n      forbidden: false,\r\n      row: { user: \"\", pass: \"\", role: \"\" },\r\n      isOpenSnackbar: false,\r\n      messageSnackbar: \"\",\r\n      isntRedirect: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      data,\r\n      numAllRows,\r\n      page,\r\n      isLoad,\r\n      forbidden,\r\n      isOpenModal,\r\n      row,\r\n      isOpenSnackbar,\r\n      messageSnackbar,\r\n      isntRedirect\r\n    } = this.state;\r\n    const emptyRows = rowsPerPage - data.length;\r\n\r\n    if (isntRedirect)\r\n      return (\r\n        <React.Fragment>\r\n          <AppBarAwr />\r\n          <div className={classes.root}>\r\n            <Paper className={classes.paperRoot}>\r\n              <Paper className={classes.paperTable}>\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\" id=\"tableTitle\">\r\n                    Editing list of users\r\n                  </Typography>\r\n\r\n                  <Fade in={isLoad}>\r\n                    <CircularProgress\r\n                      variant=\"indeterminate\"\r\n                      disableShrink\r\n                      className={classes.spiner}\r\n                      size={24}\r\n                      thickness={4}\r\n                    />\r\n                  </Fade>\r\n                </Toolbar>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow className={classes.tableRow}>\r\n                      <TableCell padding=\"dense\" align=\"left\">\r\n                        Username\r\n                      </TableCell>\r\n                      <TableCell padding=\"dense\" align=\"left\">\r\n                        Role\r\n                      </TableCell>\r\n                      <TableCell\r\n                        padding=\"none\"\r\n                        className={classes.tableCellEnabled}\r\n                        align=\"left\"\r\n                      >\r\n                        Enabled\r\n                      </TableCell>\r\n                      <TableCell\r\n                        colSpan={1}\r\n                        padding=\"dense\"\r\n                        className={classes.tableCellButtons}\r\n                        align=\"left\"\r\n                      />\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map(row => {\r\n                      return (\r\n                        <TableRow className={classes.tableRow} key={row.id}>\r\n                          <TableCell padding=\"dense\">{row.username}</TableCell>\r\n                          <TableCell padding=\"dense\" align=\"left\">\r\n                            {row.role}\r\n                          </TableCell>\r\n                          <TableCell padding=\"dense\" align=\"left\">\r\n                            {row.enabled + \"\"}\r\n                          </TableCell>\r\n                          <TableCell padding=\"none\" align=\"left\">\r\n                            <IconButton\r\n                              onClick={this.handleOperateRow(\r\n                                row.id,\r\n                                row.enabled === true ? \"disable\" : \"enable\"\r\n                              )}\r\n                              style={{ marginLeft: 10 }}\r\n                              aria-label=\"Operate\"\r\n                              disabled={isLoad}\r\n                            >\r\n                              {row.enabled === true ? (\r\n                                <ToggleOnIcon />\r\n                              ) : (\r\n                                <ToggleOffIcon />\r\n                              )}\r\n                            </IconButton>\r\n                            <IconButton\r\n                              style={{ marginLeft: 10 }}\r\n                              onClick={this.handleOperateRow(row.id, \"delete\")}\r\n                              aria-label=\"Delete\"\r\n                              disabled={isLoad}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                    {emptyRows > 0 && (\r\n                      <TableRow style={{ height: 49 * emptyRows }}>\r\n                        <TableCell colSpan={6}>\r\n                          <Fade in={emptyRows === rowsPerPage}>\r\n                            <Typography variant=\"h6\" id=\"tableTitle\">\r\n                              Loading...\r\n                            </Typography>\r\n                          </Fade>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[rowsPerPage]}\r\n                  component=\"div\"\r\n                  count={numAllRows}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  backIconButtonProps={{\r\n                    \"aria-label\": \"Previous Page\"\r\n                  }}\r\n                  nextIconButtonProps={{\r\n                    \"aria-label\": \"Next Page\"\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                />\r\n              </Paper>\r\n              <Paper className={classes.paperAdd}>\r\n                <form\r\n                  autocomplete=\"off\"\r\n                  action=\"#\"\r\n                  onSubmit={this.hadleClickSubmit}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    required\r\n                    style={{ width: 180, marginRight: 10 }}\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    onChange={this.handleChangeRow(\"user\")}\r\n                    value={row[\"user\"]}\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    style={{ width: 180, marginRight: 10 }}\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={this.handleChangeRow(\"pass\")}\r\n                    value={row[\"pass\"]}\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    select\r\n                    style={{ width: 90, marginRight: 10 }}\r\n                    id=\"role\"\r\n                    label=\"Role\"\r\n                    onChange={this.handleChangeRow(\"role\")}\r\n                    value={row[\"role\"]}\r\n                  >\r\n                    <MenuItem key=\"ROLE_ADMIN\" value=\"ROLE_ADMIN\">\r\n                      admin\r\n                    </MenuItem>\r\n                    <MenuItem key=\"ROLE_USER\" value=\"ROLE_USER\">\r\n                      user\r\n                    </MenuItem>\r\n                  </TextField>\r\n                  <Button\r\n                    disabled={isLoad}\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </Paper>\r\n          </div>\r\n          <ModalInfo\r\n            open={forbidden}\r\n            hadleClickClose={this.handleCloseModal}\r\n            title=\"Access forbidden...\"\r\n            content=\"You were logged out, or session timed out. If you need to continue editing on this page, please login again\"\r\n            route=\"/login\"\r\n            routeButtonName=\"Login\"\r\n          />\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\"\r\n            }}\r\n            open={isOpenSnackbar}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleCloseSnackbar}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            message={<span id=\"message-id\">{messageSnackbar}</span>}\r\n            action={[\r\n              <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.snackbar}\r\n                onClick={this.handleCloseSnackbar}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nAdmin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Admin);\r\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from \"./components/home-page/home\";\nimport EditListDb from \"./components/edit-list-db-page/edit-list-db\";\nimport Login from \"./components/login-page/login\";\nimport HistoryAwrGetting from \"./components/history-page/history\"\nimport Admin from \"./components/admin-page/admin\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#f80000',\n      main: '#f80000',\n      dark: '#f80000',\n      contrastText: '#f9fbe7',\n    },\n    secondary: {\n      light: '#81d4fa',\n      main: '#4fc3f7',\n      dark: '#29b6f6',\n      contrastText: '#e1f5fe',\n    },\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>      \n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/history\" component={HistoryAwrGetting}/>\n        <Route exact path=\"/edit-list-db\" component={EditListDb}/>\n        <Route exact path=\"/admin\" component={Admin} /> \n        <Route exact path=\"/login\" component={Login} />       \n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={\"/getawr\"}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}