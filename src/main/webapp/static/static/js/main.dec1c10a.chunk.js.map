{"version":3,"sources":["components/common/requests.js","components/common/app-bar-awr.jsx","components/common/abstract-filtered-data.jsx","components/home-page/table/table-db-home.jsx","components/home-page/home.jsx","components/edit-list-db-page/table/toolbar.jsx","components/edit-list-db-page/modal-page/modal-row.jsx","components/edit-list-db-page/table/table-db-edit.jsx","components/edit-list-db-page/edit-list-db.jsx","components/login-page/login.jsx","components/history-page/history.jsx","App.js","index.js"],"names":["requestContent","path","type","filter","isAuthCallBack","forbidenCallBack","key","request","integerList","data","body","fetch","method","headers","Headers","content-type","JSON","stringify","id","uuidv1","toString","time","Date","UTC","Object","objectSpread","then","response","status","json","undefined","RouteLink","props","react_default","a","createElement","Link","AppBarAwr","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLogout","callBack","resp","localStorage","setItem","setState","isLogged","handleCloseModal","isSuggestModalOpen","handleSuggestLogin","state","getItem","ex","console","log","classes","_this$state","AppBar_default","Toolbar_default","Typography_default","variant","color","Button_default","className","navButton","component","to","Fragment","loginButton","onClick","Dialog_default","disableRestoreFocus","open","onClose","Paper_default","style","padding","DialogTitle_default","DialogContentText_default","margin","DialogActions_default","marginTop","marginLeft","Component","withStyles","whiteSpace","AbstractFilterDataForTable","numRows","handleChangePage","event","numRequirePage","isLoad","_this$innerMeta","innerMeta","endPointRequest","typeRequest","page","pageNumber","countRowsPerPage","numAllRows","properties","allRows","handleDeleteFilter","isntFilterEmpty","isntFilterDraftEmpty","_this$innerMeta2","filterDraft","isNotFound","handleChangeFilter","name","target","value","refreshPage","_this$innerMeta3","length","handleApplyFilter","_this$innerMeta4","forbidden","isOpenModal","initMethod","rowsPerPage","TableHomeDB","selectedRow","os","version","handleClickRow","row","handleGetPeriods","isSelectedRow","templateEmptyFilterDraft","_this2","emptyRows","spacer","actions","CircularProgress_default","disableShrink","spiner","size","thickness","Tooltip_default","disableFocusListener","placement","title","IconButton_default","toolBarElement","aria-label","Remove_default","FilterList_default","Table_default","table","TableHead_default","TableRow_default","tableRow","TableCell_default","tableCellName","align","TextField_default","label","onChange","tableCellOther","TableBody_default","map","hover","selected","height","colSpan","Fade_default","in","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","propTypes","PropTypes","object","isRequired","minWidth","tableCellButton","width","animationDuration","Home","dbId","isOpenSnackbar","snackbarStatus","minIntervalDuration","beginIntervalTime","endIntervalTime","selectedDateFrom","selectedDateTo","isNotStatePicker","handleCloseSnackbar","success","i","handleGetReport","dateFrom","toISOString","dateTo","tennantId","window","document","write","handleDateChangeFrom","date","_this$state2","handleDateChangeTo","_this$state3","_this$state4","app_bar_awr","root","paperRoot","table_db_home","divider","material_ui_pickers_esm","utils","DateFnsUtils","paperPickers","LinearProgress_default","parseInt","Grid_default","container","spacing","gridForTypography","item","xs","disabled","maxDate","minDate","picker","typography","gridButtons","buttons","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","snackbar","Close_default","theme","unit","display","justifyContent","alignItems","withTheme","TableToolBar","_this$props","numSelected","classNames","defineProperty","highlight","handleDeleteRows","Delete_default","hadleClickModalRowOpen","Add_default","paddingRight","palette","secondary","main","backgroundColor","lighten","light","flex","text","ModalRow","hadleClickModalRowClose","aria-labelledby","autocomplete","onSubmit","hadleClickModalSubmit","isEditModalType","DialogContent_default","required","fullWidth","handleChangeRowModal","values","host","port","sid","login","pass","flexDirection","statusModal","TableEditDB","rowDataModal","isOpenDeleteSnackbar","deleteStatus","credentialId","val","test","notEditingRow","credential","requestInsertOrUpdateCredential","rowData","handleCheckBoxRow","idRow","newSelected","toConsumableArray","indexElement","indexOf","push","splice","handleCheckBoxAllRow","checked","elem","isSelected","isAllSelected","paperTable","toolbar","Checkbox_default","tableCellPortSid","Edit_default","modal_row","Redirect","overflowX","wordWrap","EditListDB","table_db_edit","Login","isPermissionDenied","isntRedirect","loginForm","user","handleChangeField","handleSubmitLogin","_this$state$loginForm","loginRequest","paper","textField","autoComplete","Clear_default","icon","Done_default","marginRight","float","HistoryAwrGetting","selectedIndex","handleListItemClick","index","paperList","List_default","subheader","ListSubheader_default","list","ListItem_default","button","ListItemIcon_default","ListItemText_default","inset","primary","background","createMuiTheme","dark","contrastText","App","core_styles","Route","exact","EditListDb","ReactDOM","render","BrowserRouter","basename","src_App","getElementById"],"mappings":"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","file":"static/js/main.dec1c10a.chunk.js","sourcesContent":["import uuidv1 from \"uuid/v1\";\r\n\r\nexport function requestContent(path, type, filter, isAuthCallBack, forbidenCallBack) {\r\n  for (const key in filter) filter[key] += \"\";\r\n\r\n  const body = {\r\n    integerList: null,\r\n    data: { filter: filter }\r\n  };\r\n  request(path, type, body, isAuthCallBack, forbidenCallBack);\r\n};\r\n\r\nexport function requestDeleteContent(credentialId, isAuthCallBack, forbidenCallBack) {\r\n  credentialId = credentialId.map(val => parseInt(val, 10));\r\n\r\n  const body = {\r\n    integerList: credentialId,\r\n    data: null\r\n  };\r\n  request(\"edit\", \"delete\", body, isAuthCallBack, forbidenCallBack);\r\n};\r\n\r\nexport function requestInsertOrUpdateCredential(type, credential, isAuthCallBack, forbidenCallBack) {\r\n  for (const key in credential) credential[key] += \"\";\r\n\r\n  const body = {\r\n    integerList: null,\r\n    data: { credential: credential }\r\n  };\r\n  request(\"edit\", type, body, isAuthCallBack, forbidenCallBack);\r\n};\r\n\r\nexport function requestPeriods(credentialId, callBack) {\r\n\r\n  const body = {\r\n    integerList: [credentialId],\r\n    data: null\r\n  };\r\n  request(\"home\", \"periods\", body, callBack);\r\n};\r\n\r\nexport function loginRequest(user, pass, callBack) {\r\n\r\n  fetch(\"/getawr/rest/edit/in?arg1=\" + user + \"&arg2=\" + pass, {\r\n    method: \"post\",   \r\n  }).then(callBack);\r\n};\r\n\r\nexport function logoutRequest(callBack) {\r\n\r\n  fetch(\"/getawr/rest/edit/out\", {\r\n    method: \"post\",   \r\n  }).then(callBack);\r\n};\r\n\r\nfunction request(path, type, body, isAuthCallBack, forbidenCallBack) {\r\n  fetch(\"/getawr/rest/\" + path, {\r\n    method: \"post\",\r\n    headers: new Headers({ \"content-type\": \"application/json;charset=UTF-8\" }),\r\n    body: JSON.stringify({\r\n      id: uuidv1().toString(),\r\n      time: Date.UTC(),\r\n      type: type,\r\n      body: { ...body }\r\n    })\r\n  }).then(function(response) {\r\n    if (response.status !== 403) \r\n      response.json().then(isAuthCallBack); \r\n    else if (!(forbidenCallBack === undefined || forbidenCallBack === null))\r\n      forbidenCallBack(response);    \r\n  });\r\n};\r\n\r\n// function requestPublic(path, type, body, callBack) {\r\n//   fetch(\"/getawr/rest/\" + path, {\r\n//     method: \"post\",\r\n//     headers: new Headers({ \"content-type\": \"application/json;charset=UTF-8\" }),\r\n//     body: JSON.stringify({\r\n//       id: uuidv1().toString(),\r\n//       time: Date.UTC(),\r\n//       type: type,\r\n//       body: { ...body }\r\n//     })\r\n//   }).then(function(response) {\r\n//     response.json().then(callBack);\r\n//   });\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport { Link as RouteLinkHiddenName } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { logoutRequest } from \"./requests\";\r\n\r\nconst RouteLink = props => <RouteLinkHiddenName {...props} />;\r\n\r\nconst styles = {\r\n  loginButton: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  navButton: {\r\n    whiteSpace: \"nowrap\",\r\n    marginLeft: \"10px\"\r\n  }\r\n};\r\n\r\nclass AppBarAwr extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      isLogged: false,\r\n      isSuggestModalOpen: false\r\n    };\r\n    try {\r\n      if (localStorage.getItem(\"isAuth\") === \"1\") this.state.isLogged = true;\r\n      else this.state.isLogged = false;\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      localStorage.setItem(\"isAuth\", \"0\");\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    logoutRequest(resp => {\r\n      localStorage.setItem(\"isAuth\", \"0\");\r\n      this.setState({ isLogged: false });\r\n    });\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ isSuggestModalOpen: false });\r\n  };\r\n\r\n  handleSuggestLogin = () => {\r\n    this.setState({ isSuggestModalOpen: true });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { isLogged, isSuggestModalOpen } = this.state;\r\n\r\n    return (\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Get Oracle AWR\r\n          </Typography>\r\n          <Button\r\n            className={classes.navButton}\r\n            component={RouteLink}\r\n            to=\"/\"\r\n            color=\"inherit\"\r\n          >\r\n            home\r\n          </Button>\r\n          <Button\r\n            className={classes.navButton}\r\n            component={RouteLink}\r\n            to=\"/history\"\r\n            color=\"inherit\"\r\n          >\r\n            History\r\n          </Button>\r\n\r\n          {isLogged ? (\r\n            <React.Fragment>\r\n              <Button\r\n                className={classes.navButton}\r\n                component={RouteLink}\r\n                to=\"/edit-list-db\"\r\n                color=\"inherit\"\r\n              >\r\n                Edit list DB\r\n              </Button>\r\n              <Button\r\n                className={classes.loginButton}\r\n                onClick={this.handleLogout}\r\n                color=\"inherit\"\r\n              >\r\n                Logout\r\n              </Button>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <Button\r\n                className={classes.navButton}\r\n                onClick={this.handleSuggestLogin}\r\n                color=\"inherit\"\r\n              >\r\n                Edit list DB\r\n              </Button>\r\n              <Button\r\n                className={classes.loginButton}\r\n                component={RouteLink}\r\n                to=\"/login\"\r\n                color=\"inherit\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </Toolbar>\r\n        <Dialog\r\n          disableRestoreFocus\r\n          open={isSuggestModalOpen}\r\n          onClose={this.handleCloseModal}\r\n        >\r\n          <Paper style={{ padding: 20 }}>\r\n            <DialogTitle>You are not logged in</DialogTitle>\r\n            <hr />\r\n            <DialogContentText>\r\n              <Typography variant=\"h6\" color=\"inherit\" style={{ margin: 20 }}>\r\n                Only authorized users can access this page. Please log in if you\r\n                need to edit your Oracle database connection information.\r\n              </Typography>\r\n            </DialogContentText>\r\n            <hr />\r\n            <DialogActions style={{ marginTop: 20 }}>\r\n              <Button onClick={this.handleCloseModal} color=\"inherit\">\r\n                Close\r\n              </Button>\r\n              <Button\r\n                style={{ marginLeft: 10 }}\r\n                component={RouteLink}\r\n                to=\"/login\"\r\n                color=\"inherit\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </DialogActions>\r\n          </Paper>\r\n        </Dialog>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nAppBarAwr.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AppBarAwr);\r\n","import { Component } from \"react\";\r\nimport { requestContent } from \"./requests\";\r\n\r\nclass AbstractFilterDataForTable extends Component {\r\n  /*\r\n  Небходимые свойства объекта state\r\n  \r\n  state = {\r\n    filterDraft: { name: \"\", host: \"\", port: \"\" },\r\n    page: 0,\r\n    numAllRows: 0,\r\n    data: [],\r\n    isLoad: true,\r\n    isNotFound: false\r\n  };\r\n  */\r\n\r\n  constructor(numRows) {\r\n    super();\r\n    this.innerMeta = {};\r\n    this.innerMeta.numRows = numRows;\r\n    this.innerMeta.filter = {};\r\n    this.innerMeta.endPointRequest = \"unknown\";\r\n    this.innerMeta.typeRequest = \"unknown\";\r\n    this.forbidenCallBack = () => {\r\n      localStorage.setItem(\"isAuth\", \"0\");\r\n      this.setState({ forbidden: true, isOpenModal: true });\r\n    };\r\n    this.innerMeta.initMethod = () => {\r\n      requestContent(\r\n        this.innerMeta.endPointRequest,\r\n        this.innerMeta.typeRequest,\r\n        { pageNumber: 0, countRowsPerPage: numRows },\r\n        resp => {\r\n          this.setState({\r\n            data: resp.body.data,\r\n            numAllRows: resp.body.properties.allRows,\r\n            isLoad: false\r\n          });\r\n        }, this.forbidenCallBack\r\n      );\r\n    };\r\n  }\r\n\r\n  handleChangePage = (event, numRequirePage) => {\r\n    if (this.state.isLoad) return;\r\n    const { endPointRequest, typeRequest, numRows, filter } = this.innerMeta;\r\n    this.setState({ data: [], page: numRequirePage, isLoad: true });\r\n    requestContent(\r\n      endPointRequest,\r\n      typeRequest,\r\n      { pageNumber: numRequirePage, countRowsPerPage: numRows, ...filter },\r\n      resp => {\r\n        this.setState({\r\n          data: resp.body.data,\r\n          numAllRows: resp.body.properties.allRows,\r\n          isLoad: false\r\n        });\r\n      }, this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  handleDeleteFilter = () => {\r\n    let isntFilterEmpty = false;\r\n    let isntFilterDraftEmpty = false;\r\n    const { endPointRequest, typeRequest, numRows } = this.innerMeta;\r\n    for (const key in this.state.filterDraft)\r\n      if (this.state.filterDraft[key] !== \"\") {\r\n        isntFilterDraftEmpty = true;\r\n        break;\r\n      }\r\n\r\n    for (const key in this.innerMeta.filter)\r\n      if (this.innerMeta.filter[key] !== \"\") {\r\n        isntFilterEmpty = true;\r\n        break;\r\n      }\r\n\r\n    if (isntFilterDraftEmpty) {\r\n      const { filterDraft } = this.state;\r\n      for (const key in filterDraft) filterDraft[key] = \"\";\r\n      this.setState({ filterDraft: filterDraft });\r\n    }\r\n\r\n    if (isntFilterEmpty) {\r\n      this.innerMeta.filter = {};\r\n      this.setState({ data: [], page: 0, isLoad: true });\r\n      requestContent(\r\n        endPointRequest,\r\n        typeRequest,\r\n        { pageNumber: 0, countRowsPerPage: numRows },\r\n        resp => {\r\n          this.setState({\r\n            data: resp.body.data,\r\n            numAllRows: resp.body.properties.allRows,\r\n            isLoad: false,\r\n            isNotFound: false\r\n          });\r\n        }, this.forbidenCallBack\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChangeFilter = name => event => {\r\n    const { filterDraft } = this.state;\r\n    filterDraft[name] = event.target.value;\r\n    this.setState({ filterDraft: filterDraft });\r\n  };\r\n\r\n  refreshPage = (page) => {\r\n    const { endPointRequest, typeRequest, numRows, filter } = this.innerMeta;\r\n    requestContent(\r\n      endPointRequest,\r\n      typeRequest,\r\n      { pageNumber: page, countRowsPerPage: numRows, ...filter },\r\n      resp => {\r\n        this.setState({\r\n          data: resp.body.data,\r\n          numAllRows: resp.body.properties.allRows,\r\n          isLoad: false,\r\n          isNotFound: resp.body.data.length === 0\r\n        });\r\n      }, this.forbidenCallBack\r\n    );\r\n  };\r\n\r\n  handleApplyFilter = () => {\r\n    let isntFilterEmpty = false;\r\n    for (const key in this.state.filterDraft)\r\n      if (this.state.filterDraft[key] !== \"\") {\r\n        isntFilterEmpty = true;\r\n        break;\r\n      }\r\n\r\n    if (isntFilterEmpty) {\r\n      this.innerMeta.filter = {};\r\n      for (const key in this.state.filterDraft)\r\n        if (this.state.filterDraft[key] !== \"\")\r\n          this.innerMeta.filter[key] = this.state.filterDraft[key];\r\n      const { endPointRequest, typeRequest, numRows, filter } = this.innerMeta;\r\n      this.setState({ data: [], page: 0, isLoad: true });\r\n      requestContent(\r\n        endPointRequest,\r\n        typeRequest,\r\n        { pageNumber: 0, countRowsPerPage: numRows, ...filter },\r\n        resp => {\r\n          this.setState({\r\n            data: resp.body.data,\r\n            numAllRows: resp.body.properties.allRows,\r\n            isLoad: false,\r\n            isNotFound: resp.body.data.length === 0\r\n          });\r\n        }, this.forbidenCallBack\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default AbstractFilterDataForTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AbstractFilterDataForTable from \"../../common/abstract-filtered-data\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { requestPeriods } from \"../../common/requests\";\r\n\r\nconst rowsPerPage = 5;\r\n\r\nconst styles = {\r\n  table: {\r\n    minWidth: 600\r\n  },\r\n  tableCellButton: {\r\n    width: 98,\r\n    minWidth: 98\r\n  },\r\n  actions: {\r\n    marginLeft: \"auto\"\r\n  },\r\n  toolBarElement: {\r\n    marginLeft: 10\r\n  },\r\n  tableCellName: {\r\n    minWidth: \"45%\",\r\n    width: \"45%\"\r\n  },\r\n  tableCellOther: {\r\n    minWidth: \"34%\",\r\n    width: \"34%\"\r\n  },\r\n  spiner: {\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  }\r\n};\r\n\r\nclass TableHomeDB extends AbstractFilterDataForTable {\r\n  state = {\r\n    selectedRow: {},\r\n    filterDraft: { name: \"\", os: \"\", version: \"\" },\r\n    page: 0,\r\n    numAllRows: 0,\r\n    data: [],\r\n    isLoad: true,\r\n    isNotFound: false\r\n  };\r\n\r\n  constructor() {\r\n    super(rowsPerPage);\r\n    this.innerMeta.endPointRequest = \"home\";\r\n    this.innerMeta.typeRequest = \"content\";\r\n    this.innerMeta.initMethod();\r\n    this.innerMeta.initMethod = null;\r\n    this.innerMeta.templateEmptyFilterDraft = { name: \"\", os: \"\", version: \"\" };\r\n  }\r\n\r\n  handleClickRow = row => () => {\r\n    if(this.state.isLoad) return;\r\n    this.setState({ selectedRow: row });\r\n    this.props.handleGetPeriods(true);\r\n    requestPeriods(row.id, resp => {\r\n      this.props.handleGetPeriods(false, resp, row);\r\n    });\r\n  };\r\n\r\n  isSelectedRow = id => id === this.state.selectedRow.id;\r\n\r\n  render() {\r\n    const { page, numAllRows, data, isLoad, filterDraft, isNotFound } = this.state;\r\n    const emptyRows = rowsPerPage - data.length;\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Paper>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Please select database\r\n          </Typography>\r\n          <div className={classes.spacer} />\r\n          <div className={classes.actions}>\r\n            {isLoad ? (\r\n              <CircularProgress\r\n                variant=\"indeterminate\"\r\n                disableShrink\r\n                className={classes.spiner}\r\n                size={24}\r\n                thickness={4}\r\n              />\r\n            ) : (\r\n              <React.Fragment>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  placement={\"top\"}\r\n                  title=\"Clear filter\"\r\n                >\r\n                  <IconButton\r\n                    className={classes.toolBarElement}\r\n                    onClick={this.handleDeleteFilter}\r\n                    aria-label=\"Clear filter\"\r\n                  >\r\n                    <Remove />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip\r\n                  disableFocusListener\r\n                  placement={\"top\"}\r\n                  title=\"Aply filter\"\r\n                >\r\n                  <IconButton\r\n                    className={classes.toolBarElement}\r\n                    onClick={this.handleApplyFilter}\r\n                    aria-label=\"Aply filter\"\r\n                  >\r\n                    <FilterListIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell className={classes.tableCellName} align=\"left\">\r\n                <TextField\r\n                  id=\"outlined-name\"\r\n                  label={\"Name\"}\r\n                  value={filterDraft[\"name\"]}\r\n                  onChange={this.handleChangeFilter(\"name\")}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n              <TableCell className={classes.tableCellOther} align=\"left\">\r\n                <TextField\r\n                  id=\"outlined-os\"\r\n                  label={\"OS\"}\r\n                  onChange={this.handleChangeFilter(\"os\")}\r\n                  value={filterDraft[\"os\"]}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n              <TableCell className={classes.tableCellOther} align=\"left\">\r\n                <TextField\r\n                  id=\"outlined-version\"\r\n                  label={\"Version\"}\r\n                  onChange={this.handleChangeFilter(\"version\")}\r\n                  value={filterDraft[\"version\"]}\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map(row => (\r\n              <TableRow\r\n                hover={!isLoad}\r\n                selected={this.isSelectedRow(row.id)}\r\n                onClick={this.handleClickRow(row)}\r\n                className={classes.tableRow}\r\n                key={row.id}\r\n              >\r\n                <TableCell>{row.name}</TableCell>\r\n                <TableCell>{row.os}</TableCell>\r\n                <TableCell>{row.version}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={3}>\r\n                  <Fade in={emptyRows === rowsPerPage}>\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                      {isNotFound\r\n                        ? \"Not found, please change filter\"\r\n                        : \"Loading...\"}\r\n                    </Typography>\r\n                  </Fade>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5]}\r\n          component=\"div\"\r\n          count={numAllRows}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"Previous Page\"\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"Next Page\"\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nTableHomeDB.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TableHomeDB);\r\n","import React, { Component } from \"react\";\r\nimport AppBarAwr from \"../common/app-bar-awr\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n  DatePicker\r\n} from \"material-ui-pickers\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableHomeDB from \"./table/table-db-home\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { requestContent } from \"../common/requests\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 750,\r\n    minWidth: 750,\r\n    marginTop: theme.spacing.unit * 7,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperPickers: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  gridButtons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  picker: {\r\n    marginTop: 20,\r\n    marginLeft: \"20%\"\r\n  },\r\n  gridForTypography: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    marginLeft: 10\r\n  },\r\n  buttons: {\r\n    marginTop: \"5%\"\r\n  },\r\n  snackbar: {\r\n    padding: theme.spacing.unit / 2\r\n  }\r\n});\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    isLoad: false,\r\n    dbId: null,\r\n    isOpenSnackbar: false,\r\n    snackbarStatus: \"\",\r\n    minIntervalDuration: null,\r\n    beginIntervalTime: new Date(), \r\n    endIntervalTime: new Date(), \r\n    selectedDateFrom: new Date(), \r\n    selectedDateTo: new Date(), \r\n    isNotStatePicker: true,\r\n    selectedRow: {}\r\n  };\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ isOpenSnackbar: false, snackbarStatus: \"\" });\r\n  };\r\n\r\n  handleGetPeriods = (isLoad, resp, selectedRow) => {\r\n    if (isLoad) this.setState({ isLoad: true, isNotStatePicker: true });\r\n    else {\r\n      if (!resp.success) {\r\n        this.setState({\r\n          isLoad: false,\r\n          dbId: null,\r\n          isOpenSnackbar: true,\r\n          snackbarStatus: resp.body,\r\n          minIntervalDuration: null,\r\n          beginIntervalTime: null,\r\n          endIntervalTime: null,\r\n          selectedDateFrom: null,\r\n          selectedDateTo: null,\r\n          isNotStatePicker: true,\r\n          selectedRow: {}\r\n        });\r\n        return;\r\n      }\r\n      const { data } = resp.body;\r\n      let i = 0;\r\n      if (data.length > 1 && data[0].dbId === data[1].dbId) ++i;\r\n\r\n      this.setState({\r\n        isLoad: false,\r\n        dbId: data[0].dbId,\r\n        minIntervalDuration:\r\n          (data[0].endIntervalTime - data[0].beginIntervalTime) + 500000,\r\n        beginIntervalTime: new Date(data[0].beginIntervalTime - 600000),\r\n        endIntervalTime: new Date(data[i].endIntervalTime + 600000),\r\n        selectedDateFrom: new Date(data[i].beginIntervalTime),\r\n        selectedDateTo: new Date(data[i].endIntervalTime),\r\n        isNotStatePicker: false,\r\n        selectedRow: selectedRow\r\n      });\r\n    }\r\n  };\r\n\r\n  handleGetReport = () => {\r\n    this.setState({ isLoad: true, isNotStatePicker: true });\r\n    const { selectedDateFrom, selectedDateTo, selectedRow } = this.state;\r\n    const propsForGetAWR = {\r\n      dbId: this.state.dbId,\r\n      dateFrom: selectedDateFrom.toISOString(),     \r\n      dateTo: selectedDateTo.toISOString(),\r\n      tennantId: selectedRow.id\r\n    };\r\n\r\n    \r\n    \r\n    requestContent(\"home\", \"awr\", propsForGetAWR, resp => {\r\n      this.setState({ isLoad: false, isNotStatePicker: false });\r\n      if (!resp.success)\r\n        this.setState({ isOpenSnackbar: true, snackbarStatus: resp.body, });\r\n      const awrContent = window.open(\"about:blank\", \"awr report\", \"\");\r\n      awrContent.document.write(resp.body);\r\n      resp.body = null;\r\n    });\r\n  };\r\n\r\n  handleDateChangeFrom = date => {\r\n    const {beginIntervalTime, minIntervalDuration, selectedDateTo} = this.state;\r\n    if (date - beginIntervalTime < 0)\r\n      this.setState({ selectedDateFrom: beginIntervalTime });\r\n    else if(selectedDateTo - date < minIntervalDuration)\r\n      this.setState({selectedDateFrom: new Date(+selectedDateTo - minIntervalDuration) })\r\n    else\r\n      this.setState({ selectedDateFrom: date });\r\n  };\r\n\r\n  handleDateChangeTo = date => {\r\n    const {endIntervalTime, minIntervalDuration, selectedDateFrom} = this.state;\r\n    if (endIntervalTime - date < 0)\r\n      this.setState({ selectedDateTo: endIntervalTime });\r\n    else if(date - selectedDateFrom < minIntervalDuration)\r\n      this.setState({selectedDateTo: new Date(+selectedDateFrom + minIntervalDuration) })\r\n    else\r\n      this.setState({ selectedDateTo: date });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      isLoad,\r\n      isNotStatePicker,\r\n      selectedDateFrom,\r\n      selectedDateTo,\r\n      beginIntervalTime,\r\n      endIntervalTime,\r\n      snackbarStatus,\r\n      isOpenSnackbar,\r\n      selectedRow\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppBarAwr />\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paperRoot}>\r\n            <TableHomeDB handleGetPeriods={this.handleGetPeriods} />\r\n            <div className={classes.divider} />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Paper className={classes.paperPickers}>\r\n                <div style={{ height: 10 }}>\r\n                  <Fade in={isLoad}>\r\n                    <LinearProgress color=\"secondary\" />\r\n                  </Fade>\r\n                </div>\r\n                <div style={{ height: 10 }}>\r\n                  <Fade in={!isNotStatePicker}>\r\n                    <Typography variant=\"body1\" color=\"inherit\">\r\n                      For DB: {selectedRow.name}, awr interval about {parseInt((this.state.minIntervalDuration - 500000) / 60000)} minuts\r\n                    </Typography>\r\n                  </Fade>\r\n                </div>\r\n                <Grid container spacing={0}>\r\n                  <Grid container spacing={0}>\r\n                    <Grid className={classes.gridForTypography} item xs={2}>\r\n                      <Typography variant=\"body1\" color=\"inherit\">\r\n                        From period:\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <DatePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={selectedDateTo}\r\n                        minDate={beginIntervalTime}\r\n                        className={classes.picker}\r\n                        label=\"Date\"\r\n                        value={selectedDateFrom}\r\n                        onChange={this.handleDateChangeFrom}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TimePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={selectedDateTo}\r\n                        minDate={beginIntervalTime}\r\n                        className={classes.picker}\r\n                        label=\"Time\"\r\n                        value={selectedDateFrom}\r\n                        onChange={this.handleDateChangeFrom}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    <Grid className={classes.gridForTypography} item xs={2}>\r\n                      <Typography\r\n                        className={classes.typography}\r\n                        variant=\"body1\"\r\n                        color=\"inherit\"\r\n                      >\r\n                        To period:\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <DatePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={endIntervalTime}\r\n                        minDate={selectedDateFrom}\r\n                        className={classes.picker}\r\n                        label=\"Date\"\r\n                        value={selectedDateTo}\r\n                        onChange={this.handleDateChangeTo}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TimePicker\r\n                        disabled={isNotStatePicker}\r\n                        maxDate={endIntervalTime}\r\n                        minDate={selectedDateFrom}\r\n                        className={classes.picker}\r\n                        label=\"Time\"\r\n                        value={selectedDateTo}\r\n                        onChange={this.handleDateChangeTo}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={0}>\r\n                    {/*TODO, I think here is necessary to add more functionality, it can be a new time period to compare the awr*/}\r\n                    <Grid item className={classes.gridButtons} xs={12}>\r\n                      <Button\r\n                        disabled={isNotStatePicker}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={this.handleGetReport}\r\n                        className={classes.buttons}\r\n                      >\r\n                        Get report\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </MuiPickersUtilsProvider>\r\n          </Paper>\r\n        </div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          }}\r\n          open={isOpenSnackbar}\r\n          autoHideDuration={8000}\r\n          onClose={this.handleCloseSnackbar}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{snackbarStatus}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.snackbar}\r\n              onClick={this.handleCloseSnackbar}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Home);\r\n","import React, { Component } from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n  },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    display: \"flex\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    padding: 15\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  },\r\n  toolBarElement: {\r\n    marginLeft: 10\r\n  },\r\n  spiner: {\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  }\r\n});\r\n\r\nclass TableToolBar extends Component {\r\n  render() {\r\n    const { numSelected, classes } = this.props;\r\n\r\n    return (\r\n      <Toolbar\r\n        className={classNames(classes.root, {\r\n          [classes.highlight]: numSelected > 0\r\n        })}\r\n      >\r\n        <div className={classes.title}>\r\n          {numSelected > 0 ? (\r\n            <Typography color=\"inherit\" variant=\"subtitle1\">\r\n              {numSelected} selected\r\n            </Typography>\r\n          ) : (\r\n            <Typography variant=\"h6\" id=\"tableTitle\">\r\n              List of database instance records\r\n            </Typography>\r\n          )}\r\n        </div>\r\n        <div className={classes.spacer} />\r\n\r\n        <div className={classes.actions}>\r\n          {numSelected > 0 ? (\r\n            <Tooltip placement={\"top\"} title=\"Delete\">\r\n              <IconButton\r\n                onClick={this.props.handleDeleteRows}\r\n                aria-label=\"Delete\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          ) : (\r\n            <React.Fragment>\r\n              {this.props.isLoad ? (\r\n                <CircularProgress\r\n                  variant=\"indeterminate\"\r\n                  disableShrink\r\n                  className={classes.spiner}\r\n                  size={24}\r\n                  thickness={4}\r\n                />\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Tooltip\r\n                    disableFocusListener\r\n                    placement={\"top\"}\r\n                    title=\"Clear filter\"\r\n                  >\r\n                    <IconButton\r\n                      className={classes.toolBarElement}\r\n                      onClick={this.props.handleDeleteFilter}\r\n                      aria-label=\"Clear filter\"\r\n                    >\r\n                      <Remove />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip\r\n                    disableFocusListener\r\n                    placement={\"top\"}\r\n                    title=\"Aply filter\"\r\n                  >\r\n                    <IconButton\r\n                      className={classes.toolBarElement}\r\n                      onClick={this.props.handleApplyFilter}\r\n                      aria-label=\"Aply filter\"\r\n                    >\r\n                      <FilterListIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </React.Fragment>\r\n              )}\r\n              <Tooltip\r\n                disableFocusListener\r\n                placement={\"top\"}\r\n                title=\"Add record\"\r\n              >\r\n                <IconButton\r\n                  color=\"secondary\"\r\n                  className={classes.toolBarElement}\r\n                  onClick={this.props.hadleClickModalRowOpen(false)}\r\n                  aria-label=\"Add record\"\r\n                >\r\n                  <Add />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n\r\nTableToolBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TableToolBar);\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link as RouteLinkHiddenName } from \"react-router-dom\";\r\n\r\nconst RouteLink = props => <RouteLinkHiddenName {...props} />;\r\n\r\nclass ModalRow extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          disableRestoreFocus\r\n          open={this.props.open}\r\n          onClose={this.props.hadleClickModalRowClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          {this.props.forbidden ? (\r\n            <React.Fragment>\r\n              <Paper style={{ padding: 20 }}>\r\n                <DialogTitle>Access forbidden...</DialogTitle>\r\n                <hr />\r\n                <DialogContentText>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    color=\"inherit\"\r\n                    style={{ margin: 20 }}\r\n                  >\r\n                    You were logged out, or session timed out. If you need to\r\n                    continue editing on this page, please login again.\r\n                  </Typography>\r\n                </DialogContentText>\r\n                <hr />\r\n                <DialogActions style={{ marginTop: 20 }}>\r\n                  <Button\r\n                    onClick={this.props.hadleClickModalRowClose}\r\n                    color=\"inherit\"\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                  <Button\r\n                    style={{ marginLeft: 10 }}\r\n                    component={RouteLink}\r\n                    to=\"/login\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </DialogActions>\r\n              </Paper>\r\n            </React.Fragment>\r\n          ) : (\r\n            <form\r\n              autocomplete=\"off\"\r\n              action=\"#\"\r\n              onSubmit={this.props.hadleClickModalSubmit}\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">\r\n                <Typography color=\"inherit\" variant=\"inherit\">\r\n                  You can {this.props.isEditModalType ? \"edit\" : \"add\"} info\r\n                  about Oracle DB connection\r\n                </Typography>\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  required\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"DB name (name)\"\r\n                  fullWidth\r\n                  onChange={this.props.handleChangeRowModal(\"name\")}\r\n                  value={this.props.values.name}\r\n                />\r\n                <TextField\r\n                  required\r\n                  margin=\"dense\"\r\n                  id=\"host\"\r\n                  label=\"Host\"\r\n                  fullWidth\r\n                  onChange={this.props.handleChangeRowModal(\"host\")}\r\n                  value={this.props.values.host}\r\n                />\r\n                <TextField\r\n                  required\r\n                  margin=\"dense\"\r\n                  id=\"port\"\r\n                  label=\"Port\"\r\n                  fullWidth\r\n                  onChange={this.props.handleChangeRowModal(\"port\")}\r\n                  value={this.props.values.port}\r\n                />\r\n                <TextField\r\n                  required\r\n                  margin=\"dense\"\r\n                  id=\"sid\"\r\n                  label=\"Sid\"\r\n                  fullWidth\r\n                  onChange={this.props.handleChangeRowModal(\"sid\")}\r\n                  value={this.props.values.sid}\r\n                />\r\n                <TextField\r\n                  required\r\n                  margin=\"dense\"\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  fullWidth\r\n                  onChange={this.props.handleChangeRowModal(\"login\")}\r\n                  value={this.props.values.login}\r\n                />\r\n                <Tooltip\r\n                  placement={\"bottom-start\"}\r\n                  title={\r\n                    this.props.isEditModalType\r\n                      ? \"If you want edit reenter all password, or just don't change\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <TextField\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"pass\"\r\n                    label={\"Password\"}\r\n                    onChange={this.props.handleChangeRowModal(\"pass\")}\r\n                    value={this.props.values.pass}\r\n                    type=\"password\"\r\n                    fullWidth\r\n                  />\r\n                </Tooltip>\r\n              </DialogContent>\r\n\r\n              <div\r\n                style={{ display: \"flex\", flexDirection: \"row\", padding: 20 }}\r\n              >\r\n                <Typography\r\n                  style={{ padding: 10 }}\r\n                  color=\"inherit\"\r\n                  variant=\"inherit\"\r\n                >\r\n                  status: {this.props.statusModal}\r\n                </Typography>\r\n                {this.props.statusModal ===\r\n                  \"performing request, please wait\" && (\r\n                  <CircularProgress\r\n                    variant=\"indeterminate\"\r\n                    disableShrink\r\n                    style={{\r\n                      marginLeft: \"auto\",\r\n                      color: \"#6798e5\",\r\n                      animationDuration: \"550ms\"\r\n                    }}\r\n                    size={24}\r\n                    thickness={4}\r\n                  />\r\n                )}\r\n              </div>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.props.hadleClickModalRowClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  disabled={\r\n                    this.props.statusModal === \"performing request, please wait\"\r\n                  }\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          )}\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalRow;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport TableToolBar from \"./toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ModalRow from \"../modal-page/modal-row\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AbstractFilterDataForTable from \"../../common/abstract-filtered-data\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  requestInsertOrUpdateCredential,\r\n  requestDeleteContent\r\n} from \"../../common/requests\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst rowsPerPage = 10;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 3,\r\n    width: \"70%\",\r\n    minWidth: 1200,\r\n    marginTop: theme.spacing.unit * 7\r\n  },\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperTable: {\r\n    overflowX: \"auto\"\r\n  },\r\n  tableCellName: {\r\n    wordWrap: \"break-word\",\r\n    width: \"20%\",\r\n    minWidth: \"20%\"\r\n  },\r\n  tableCellButton: {\r\n    width: \"10%\",\r\n    minWidth: \"10%\"\r\n  },\r\n  tableCellOther: {\r\n    wordWrap: \"break-word\",\r\n    minWidth: \"20%\",\r\n    width: \"20%\"\r\n  },\r\n  tableCellPortSid: {\r\n    wordWrap: \"break-word\",\r\n    minWidth: \"15%\",\r\n    width: \"15%\"\r\n  },\r\n  snackbar: {\r\n    padding: theme.spacing.unit / 2\r\n  }\r\n});\r\n\r\nclass TableEditDB extends AbstractFilterDataForTable {\r\n  state = {\r\n    forbidden: false,\r\n    filterDraft: { name: \"\", host: \"\", port: \"\", sid: \"\", login: \"\" },\r\n    page: 0,\r\n    numAllRows: 0,\r\n    data: [],\r\n    isLoad: true,\r\n    isNotFound: false,\r\n    isOpenModal: false,\r\n    selected: [],\r\n    rowDataModal: {\r\n      id: \"\",\r\n      name: \"\",\r\n      host: \"\",\r\n      port: \"\",\r\n      sid: \"\",\r\n      login: \"\",\r\n      pass: \"\"\r\n    },\r\n    statusModal: \"on open...\",\r\n    isEditModalType: false,\r\n    isOpenDeleteSnackbar: false,\r\n    deleteStatus: \"\"\r\n  };\r\n\r\n  constructor() {\r\n    super(rowsPerPage);\r\n    this.innerMeta.endPointRequest = \"edit\";\r\n    this.innerMeta.typeRequest = \"content\";\r\n    this.innerMeta.initMethod();\r\n    this.innerMeta.initMethod = null;\r\n    this.innerMeta.notEditingRow = {};\r\n  }\r\n\r\n  handleCloseSnackbar = () => {\r\n    this.setState({ isOpenDeleteSnackbar: false });\r\n  };\r\n\r\n  handleDeleteRows = () => {\r\n    this.setState({ data: [], page: 0, isLoad: true, selected: [] });\r\n    requestDeleteContent(this.state.selected, resp => {\r\n      this.setState({ isOpenDeleteSnackbar: true, deleteStatus: resp.body });\r\n      this.refreshPage(0);\r\n    });\r\n  };\r\n\r\n  handleChangeRowModal = name => event => {\r\n    const { rowDataModal } = this.state;\r\n    if (name === \"port\" && !/^\\d*$/.test(event.target.value))\r\n      rowDataModal[name] = \"\";\r\n    else rowDataModal[name] = event.target.value;\r\n    this.setState({ rowDataModal: rowDataModal });\r\n  };\r\n\r\n  hadleClickModalSubmit = event => {\r\n    const { rowDataModal } = this.state;\r\n\r\n    let type = \"insert\";\r\n    if (this.state.isEditModalType) {\r\n      let i = 0;\r\n      type = \"update\";\r\n      for (const key in rowDataModal)\r\n        if (rowDataModal[key] !== this.innerMeta.notEditingRow[key]) ++i;\r\n      if (i === 0) return;\r\n    }\r\n    this.setState({ statusModal: \"performing request, please wait\" });\r\n    requestInsertOrUpdateCredential(type, rowDataModal, resp => {\r\n      if (this.state.statusModal === \"performing request, please wait\") {\r\n        this.setState({ statusModal: resp.body });\r\n        if (resp.body === \"row updated successfully\")\r\n          this.innerMeta.notEditingRow = { ...rowDataModal };\r\n      }\r\n    });\r\n  };\r\n\r\n  hadleClickModalRowOpen = (isEditModalType, rowData) => () => {\r\n    if (isEditModalType) {\r\n      this.innerMeta.notEditingRow = { ...rowData };\r\n      this.innerMeta.notEditingRow.pass = \"================\";\r\n    } else\r\n      this.innerMeta.notEditingRow = {\r\n        name: \"\",\r\n        host: \"\",\r\n        port: \"\",\r\n        sid: \"\",\r\n        login: \"\",\r\n        pass: \"\"\r\n      };\r\n\r\n    this.setState({\r\n      isOpenModal: true,\r\n      isEditModalType: isEditModalType,\r\n      rowDataModal: { ...this.innerMeta.notEditingRow },\r\n      statusModal: \"on open...\"\r\n    });\r\n  };\r\n\r\n  hadleClickModalRowClose = () => {\r\n    this.setState({ isOpenModal: false, statusModal: \"on close...\" });\r\n    this.refreshPage(this.state.page);\r\n  };\r\n\r\n  handleCheckBoxRow = idRow => () => {\r\n    let newSelected = [...this.state.selected];\r\n    const indexElement = newSelected.indexOf(idRow);\r\n\r\n    if (indexElement === -1) newSelected.push(idRow);\r\n    else newSelected.splice(indexElement, 1);\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleCheckBoxAllRow = event => {\r\n    if (!event.target.checked) this.setState({ selected: [] });\r\n    else this.setState({ selected: this.state.data.map(elem => elem.id) });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n  isAllSelected = () =>\r\n    this.state.data.length !== 0 &&\r\n    this.state.selected.length === this.state.data.length;\r\n\r\n  render() {\r\n    const { \r\n      forbidden,\r\n      filterDraft,\r\n      page,\r\n      numAllRows,\r\n      data,\r\n      isLoad,\r\n      isNotFound,\r\n      isOpenModal,\r\n      selected,\r\n      rowDataModal,\r\n      statusModal,\r\n      isEditModalType,\r\n      isOpenDeleteSnackbar,\r\n      deleteStatus\r\n     } = this.state;\r\n    const emptyRows = rowsPerPage - data.length;\r\n\r\n    const { classes } = this.props;\r\n    if (!forbidden || isOpenModal)\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paperRoot}>\r\n            <Paper className={classes.paperTable}>\r\n              <TableToolBar\r\n                handleApplyFilter={this.handleApplyFilter}\r\n                handleDeleteFilter={this.handleDeleteFilter}\r\n                hadleClickModalRowOpen={this.hadleClickModalRowOpen}\r\n                handleDeleteRows={this.handleDeleteRows}\r\n                numSelected={selected.length}\r\n                isLoad={isLoad}\r\n              />\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow className={classes.tableRow}>\r\n                    <TableCell\r\n                      padding=\"none\"\r\n                      className={classes.tableCellButton}\r\n                    >\r\n                      <Checkbox\r\n                        onChange={this.handleCheckBoxAllRow}\r\n                        checked={this.isAllSelected()}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellName}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-name\"\r\n                        label={\"DB name\"}\r\n                        value={filterDraft[\"name\"]}\r\n                        onChange={this.handleChangeFilter(\"name\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellOther}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-host\"\r\n                        label={\"Host\"}\r\n                        value={filterDraft[\"host\"]}\r\n                        onChange={this.handleChangeFilter(\"host\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellPortSid}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-port\"\r\n                        label={\"Port\"}\r\n                        value={filterDraft[\"port\"]}\r\n                        onChange={this.handleChangeFilter(\"port\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellPortSid}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-sid\"\r\n                        label={\"Sid\"}\r\n                        value={filterDraft[\"sid\"]}\r\n                        onChange={this.handleChangeFilter(\"sid\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"dense\"\r\n                      className={classes.tableCellOther}\r\n                      align=\"left\"\r\n                    >\r\n                      <TextField\r\n                        id=\"outlined-login\"\r\n                        label={\"Login\"}\r\n                        value={filterDraft[\"login\"]}\r\n                        onChange={this.handleChangeFilter(\"login\")}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.map(row => {\r\n                    return (\r\n                      <TableRow className={classes.tableRow} key={row.id}>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          <Checkbox\r\n                            onChange={this.handleCheckBoxRow(row.id)}\r\n                            checked={this.isSelected(row.id)}\r\n                          />\r\n                          <IconButton\r\n                            disabled={\r\n                              selected.length > 0 ? true : false\r\n                            }\r\n                            onClick={this.hadleClickModalRowOpen(true, row)}\r\n                            aria-label=\"Edit\"\r\n                          >\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          className={classes.tableCellName}\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellOther}\r\n                        >\r\n                          {row.host}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellPortSid}\r\n                        >\r\n                          {row.port}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellPortSid}\r\n                        >\r\n                          {row.sid}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          padding=\"dense\"\r\n                          align=\"left\"\r\n                          className={classes.tableCellOther}\r\n                        >\r\n                          {row.login}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 49 * emptyRows }}>\r\n                      <TableCell colSpan={6}>\r\n                        <Fade in={emptyRows === rowsPerPage}>\r\n                          <Typography variant=\"h6\" id=\"tableTitle\">\r\n                            {isNotFound\r\n                              ? \"Not found, please change filter\"\r\n                              : \"Loading...\"}\r\n                          </Typography>\r\n                        </Fade>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10]}\r\n                component=\"div\"\r\n                count={numAllRows}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                backIconButtonProps={{\r\n                  \"aria-label\": \"Previous Page\"\r\n                }}\r\n                nextIconButtonProps={{\r\n                  \"aria-label\": \"Next Page\"\r\n                }}\r\n                onChangePage={this.handleChangePage}\r\n              />\r\n\r\n              <ModalRow\r\n                hadleClickModalRowClose={this.hadleClickModalRowClose}\r\n                hadleClickModalSubmit={this.hadleClickModalSubmit}\r\n                handleChangeRowModal={this.handleChangeRowModal}\r\n                isEditModalType={isEditModalType}\r\n                open={isOpenModal}\r\n                values={rowDataModal}\r\n                statusModal={statusModal}\r\n                forbidden={forbidden}\r\n              />\r\n            </Paper>\r\n          </Paper>\r\n\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\"\r\n            }}\r\n            open={isOpenDeleteSnackbar}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleCloseSnackbar}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            message={<span id=\"message-id\">{deleteStatus}</span>}\r\n            action={[\r\n              <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.snackbar}\r\n                onClick={this.handleCloseSnackbar}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nTableEditDB.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TableEditDB);\r\n","import React, { Component } from 'react';\r\nimport AppBarAwr from '../common/app-bar-awr';\r\nimport TableEditDB from './table/table-db-edit';\r\n\r\nclass EditListDB extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( \r\n      <React.Fragment>\r\n        <AppBarAwr/>\r\n        <TableEditDB/>\r\n      </React.Fragment>\r\n     );\r\n  }\r\n}\r\n \r\nexport default EditListDB;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Done from \"@material-ui/icons/Done\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link as RouteLinkHiddenName } from \"react-router-dom\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { loginRequest } from \"../common/requests\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst RouteLink = props => <RouteLinkHiddenName {...props} />;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: \"10%\",\r\n    width: 450,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  container: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  textField: {\r\n    marginTop: \"5%\",\r\n    width: 300\r\n  },\r\n  buttons: {\r\n    marginTop: \"5%\",\r\n    marginRight: \"5%\",\r\n    width: 140\r\n  },\r\n  icon: {\r\n    marginRight: \"10px\"\r\n  },\r\n  paper: {\r\n    padding: \"10%\"\r\n  },\r\n  spiner: {\r\n    float: \"right\",\r\n    color: \"#6798e5\",\r\n    animationDuration: \"550ms\"\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isLoad: false,\r\n    isPermissionDenied: false,\r\n    isntRedirect: true,\r\n    loginForm: { user: \"\", pass: \"\" }\r\n  };\r\n\r\n  handleChangeField = name => event => {\r\n    const { loginForm } = this.state;\r\n    loginForm[name] = event.target.value;\r\n    this.setState({ isPermissionDenied: false, loginForm: { ...loginForm } });\r\n  };\r\n\r\n  handleSubmitLogin = () => {\r\n    this.setState({ isLoad: true });\r\n    const { user, pass } = this.state.loginForm;\r\n    loginRequest(user, pass, resp => {\r\n      if (resp.status !== 200)\r\n        this.setState({ isLoad: false, isPermissionDenied: true });\r\n      else {\r\n        localStorage.setItem(\"isAuth\", \"1\");\r\n        this.setState({\r\n          isLoad: false,\r\n          isPermissionDenied: false,\r\n          isntRedirect: false,\r\n          loginForm: { user: \"\", pass: \"\" }\r\n        }); \r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { isLoad, isPermissionDenied, isntRedirect, loginForm } = this.state;\r\n    if (isntRedirect)\r\n      return (\r\n        <div className={classes.root}>\r\n          <Paper className={classes.container}>\r\n            <Paper className={classes.paper}>\r\n              <Fade in={isLoad}>\r\n                <CircularProgress\r\n                  variant=\"indeterminate\"\r\n                  disableShrink\r\n                  className={classes.spiner}\r\n                  size={24}\r\n                  thickness={4}\r\n                />\r\n              </Fade>\r\n\r\n              <Typography\r\n                className={classes.textField}\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n              >\r\n                Please login\r\n              </Typography>\r\n              <div style={{ height: 15 }}>\r\n                <Fade in={isPermissionDenied}>\r\n                  <Typography variant=\"body1\" color=\"primary\">\r\n                    permision denied, please check entered data\r\n                  </Typography>\r\n                </Fade>\r\n              </div>\r\n              <TextField\r\n                id=\"standard-name\"\r\n                label=\"Login\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={loginForm[\"user\"]}\r\n                onChange={this.handleChangeField(\"user\")}\r\n              />\r\n              <TextField\r\n                id=\"standard-password-input\"\r\n                label=\"Password\"\r\n                className={classes.textField}\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={loginForm[\"pass\"]}\r\n                onChange={this.handleChangeField(\"pass\")}\r\n              />\r\n              <Button\r\n                component={RouteLink}\r\n                to=\"/\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttons}\r\n              >\r\n                <Clear className={classes.icon} />\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.buttons}\r\n                onClick={this.handleSubmitLogin}\r\n              >\r\n                <Done className={classes.icon} />\r\n                Login\r\n              </Button>\r\n            </Paper>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    else return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBarAwr from \"../common/app-bar-awr\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: 650,\r\n    minWidth: 650,\r\n    marginTop: theme.spacing.unit * 7,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperRoot: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  paperList: {\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  list: {\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\n\r\nclass HistoryAwrGetting extends Component {\r\n  state = {\r\n    selectedIndex: -1\r\n  };\r\n\r\n  handleListItemClick = (event, index) => {\r\n    this.setState({ selectedIndex: index });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBarAwr />\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paperRoot}>\r\n            <Paper className={classes.paperList}>\r\n              <List\r\n                component=\"nav\"\r\n                subheader={\r\n                  <ListSubheader component=\"div\">\r\n                    History of receiving reports\r\n                  </ListSubheader>\r\n                }\r\n                className={classes.list}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={this.state.selectedIndex === 0}\r\n                  onClick={event => this.handleListItemClick(event, 0)}\r\n                >\r\n                  <ListItemIcon />\r\n                  <ListItemText inset primary=\"An example entry\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  selected={this.state.selectedIndex === 1}\r\n                  onClick={event => this.handleListItemClick(event, 1)}\r\n                >\r\n                  <ListItemIcon />\r\n                  <ListItemText inset primary=\"An example entry\" />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </Paper>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHistoryAwrGetting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HistoryAwrGetting);\r\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from \"./components/home-page/home\";\nimport EditListDb from \"./components/edit-list-db-page/edit-list-db\";\nimport Login from \"./components/login-page/login\";\nimport HistoryAwrGetting from \"./components/history-page/history\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#f80000',\n      main: '#f80000',\n      dark: '#f80000',\n      contrastText: '#f9fbe7',\n    },\n    secondary: {\n      light: '#81d4fa',\n      main: '#4fc3f7',\n      dark: '#29b6f6',\n      contrastText: '#e1f5fe',\n    },\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>      \n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/history\" component={HistoryAwrGetting}/>\n        <Route exact path=\"/edit-list-db\" component={EditListDb}/>\n        <Route exact path=\"/login\" component={Login} />       \n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename={\"/getawr\"}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}